<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>嘉维小站</title>
  
  <subtitle>Hello Github!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://kavel.cn/"/>
  <updated>2019-09-17T04:13:18.228Z</updated>
  <id>http://kavel.cn/</id>
  
  <author>
    <name>Jiawei Wang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LeetCode 刷题记录: 101. Symmetric Tree [Python]</title>
    <link href="http://kavel.cn/zh-CN/LC101_Symmetric_Tree.html"/>
    <id>http://kavel.cn/zh-CN/LC101_Symmetric_Tree.html</id>
    <published>2019-07-24T05:00:00.000Z</published>
    <updated>2019-09-17T04:13:18.228Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原题"><a href="#原题" class="headerlink" title="原题"></a>原题</h2><blockquote><p><a href="https://leetcode.com/problems/symmetric-tree/" target="_blank" rel="noopener">https://leetcode.com/problems/symmetric-tree/</a></p><p>Given a binary tree, check whether it is a mirror of itself (ie, symmetric around its center).</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>递归判断左节点的左边是否等于右节点的右边。<br><a id="more"></a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># Definition for a binary tree node.</span></span><br><span class="line"><span class="hljs-comment"># class TreeNode:</span></span><br><span class="line"><span class="hljs-comment">#     def __init__(self, x):</span></span><br><span class="line"><span class="hljs-comment">#         self.val = x</span></span><br><span class="line"><span class="hljs-comment">#         self.left = None</span></span><br><span class="line"><span class="hljs-comment">#         self.right = None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span>:</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">isSymmetric</span><span class="hljs-params">(self, root: TreeNode)</span> -&gt; bool:</span></span><br><span class="line">        <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">isSym</span><span class="hljs-params">(L,R)</span>:</span></span><br><span class="line">            <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> L <span class="hljs-keyword">and</span> <span class="hljs-keyword">not</span> R: <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span></span><br><span class="line">            <span class="hljs-keyword">if</span> L <span class="hljs-keyword">and</span> R <span class="hljs-keyword">and</span> L.val==R.val:</span><br><span class="line">                <span class="hljs-keyword">return</span> isSym(L.left,R.right) <span class="hljs-keyword">and</span> isSym(L.right,R.left)</span><br><span class="line">        <span class="hljs-keyword">return</span> isSym(root,root)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;原题&quot;&gt;&lt;a href=&quot;#原题&quot; class=&quot;headerlink&quot; title=&quot;原题&quot;&gt;&lt;/a&gt;原题&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/symmetric-tree/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://leetcode.com/problems/symmetric-tree/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Given a binary tree, check whether it is a mirror of itself (ie, symmetric around its center).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;递归判断左节点的左边是否等于右节点的右边。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="leetcode" scheme="http://kavel.cn/categories/leetcode/"/>
    
    
      <category term="LeetCode" scheme="http://kavel.cn/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 刷题记录: 84. Largest Rectangle in Histogram [Python]</title>
    <link href="http://kavel.cn/zh-CN/LC84_Largest_Rectangle_in_Histogram.html"/>
    <id>http://kavel.cn/zh-CN/LC84_Largest_Rectangle_in_Histogram.html</id>
    <published>2019-07-24T05:00:00.000Z</published>
    <updated>2019-09-17T04:13:18.223Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原题"><a href="#原题" class="headerlink" title="原题"></a>原题</h2><blockquote><p><a href="https://leetcode.com/problems/largest-rectangle-in-histogram/" target="_blank" rel="noopener">https://leetcode.com/problems/largest-rectangle-in-histogram/</a></p><p>Given n non-negative integers representing the histogram’s bar height where the width of each bar is 1, find the area of largest rectangle in the histogram.</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>在height后面加上一个0作为右边界，记录高度堆栈stack加上一个-1作为左边界。<br><a id="more"></a><br>遍历heights，若当前height不低于stack最后一个元素的高度时，添加进stack中。否则：</p><ol><li><p>从堆栈中弹出最后一个元素，即当前最高处位置信息，获取该位置的高度。</p></li><li><p>以当前位置i作为右边界，当前堆栈的最后一个元素stack[-1]，即当前第二高的位置作为左边界，宽度则为右边界-左边界-1（边界均不包含在内），即w=i-stack[-1]-1。</p></li><li><p>此时矩形面积即为h*w。</p></li></ol><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span>:</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">largestRectangleArea</span><span class="hljs-params">(self, heights: List[int])</span> -&gt; int:</span></span><br><span class="line">        heights.append(<span class="hljs-number">0</span>)</span><br><span class="line">        stack=[<span class="hljs-number">-1</span>]</span><br><span class="line">        ans=<span class="hljs-number">0</span></span><br><span class="line">        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(len(heights)):</span><br><span class="line">            <span class="hljs-keyword">while</span> heights[i]&lt;heights[stack[<span class="hljs-number">-1</span>]]:</span><br><span class="line">                h=heights[stack.pop()]</span><br><span class="line">                w=i-stack[<span class="hljs-number">-1</span>]<span class="hljs-number">-1</span></span><br><span class="line">                ans=max(ans,h*w)</span><br><span class="line">            stack.append(i)</span><br><span class="line">        heights.pop()</span><br><span class="line">        <span class="hljs-keyword">return</span> ans</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;原题&quot;&gt;&lt;a href=&quot;#原题&quot; class=&quot;headerlink&quot; title=&quot;原题&quot;&gt;&lt;/a&gt;原题&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/largest-rectangle-in-histogram/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://leetcode.com/problems/largest-rectangle-in-histogram/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Given n non-negative integers representing the histogram’s bar height where the width of each bar is 1, find the area of largest rectangle in the histogram.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;在height后面加上一个0作为右边界，记录高度堆栈stack加上一个-1作为左边界。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="leetcode" scheme="http://kavel.cn/categories/leetcode/"/>
    
    
      <category term="LeetCode" scheme="http://kavel.cn/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 刷题记录: 85. Maximal Rectangle [Python]</title>
    <link href="http://kavel.cn/zh-CN/LC85_Maximal_Rectangle.html"/>
    <id>http://kavel.cn/zh-CN/LC85_Maximal_Rectangle.html</id>
    <published>2019-07-24T05:00:00.000Z</published>
    <updated>2019-09-17T04:13:18.225Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原题"><a href="#原题" class="headerlink" title="原题"></a>原题</h2><blockquote><p><a href="https://leetcode.com/problems/maximal-rectangle/" target="_blank" rel="noopener">https://leetcode.com/problems/maximal-rectangle/</a></p><p>Given a 2D binary matrix filled with 0’s and 1’s, find the largest rectangle containing only 1’s and return its area.</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>大致思路和 84. Largest Rectangle in Histogram 相同，对于每个row判断如果为1则高度叠加，否则高度清零。<br><a id="more"></a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span>:</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">maximalRectangle</span><span class="hljs-params">(self, matrix: List[List[str]])</span> -&gt; int:</span></span><br><span class="line">        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> matrix <span class="hljs-keyword">or</span> <span class="hljs-keyword">not</span> matrix[<span class="hljs-number">0</span>]:</span><br><span class="line">            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span></span><br><span class="line">        height=[<span class="hljs-number">0</span>] *(len(matrix[<span class="hljs-number">0</span>])+<span class="hljs-number">1</span>)</span><br><span class="line">        ans=<span class="hljs-number">0</span></span><br><span class="line">        <span class="hljs-keyword">for</span> row <span class="hljs-keyword">in</span> matrix:</span><br><span class="line">            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(len(matrix[<span class="hljs-number">0</span>])):</span><br><span class="line">                height[i]=height[i]+<span class="hljs-number">1</span> <span class="hljs-keyword">if</span> row[i]==<span class="hljs-string">'1'</span> <span class="hljs-keyword">else</span> <span class="hljs-number">0</span></span><br><span class="line">            stack=[<span class="hljs-number">-1</span>]</span><br><span class="line">            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(len(matrix[<span class="hljs-number">0</span>])+<span class="hljs-number">1</span>):</span><br><span class="line">                <span class="hljs-keyword">while</span> height[i]&lt;height[stack[<span class="hljs-number">-1</span>]]:</span><br><span class="line">                    h=height[stack.pop()]</span><br><span class="line">                    w=i-stack[<span class="hljs-number">-1</span>]<span class="hljs-number">-1</span></span><br><span class="line">                    ans=max(ans,h*w)</span><br><span class="line">                stack.append(i)</span><br><span class="line">        <span class="hljs-keyword">return</span> ans</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;原题&quot;&gt;&lt;a href=&quot;#原题&quot; class=&quot;headerlink&quot; title=&quot;原题&quot;&gt;&lt;/a&gt;原题&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/maximal-rectangle/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://leetcode.com/problems/maximal-rectangle/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Given a 2D binary matrix filled with 0’s and 1’s, find the largest rectangle containing only 1’s and return its area.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;大致思路和 84. Largest Rectangle in Histogram 相同，对于每个row判断如果为1则高度叠加，否则高度清零。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="leetcode" scheme="http://kavel.cn/categories/leetcode/"/>
    
    
      <category term="LeetCode" scheme="http://kavel.cn/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 刷题记录: 96. Unique Binary Search Trees [Python]</title>
    <link href="http://kavel.cn/zh-CN/LC96_Unique_Binary_Search_Trees.html"/>
    <id>http://kavel.cn/zh-CN/LC96_Unique_Binary_Search_Trees.html</id>
    <published>2019-07-24T05:00:00.000Z</published>
    <updated>2019-09-17T04:13:18.227Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原题"><a href="#原题" class="headerlink" title="原题"></a>原题</h2><blockquote><p><a href="https://leetcode.com/problems/unique-binary-search-trees/" target="_blank" rel="noopener">https://leetcode.com/problems/unique-binary-search-trees/</a></p><p>Given n, how many structurally unique BST’s (binary search trees) that store values 1 … n?</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>对于n个值，以i为根，则可以将[1,i-1]放入左边，[i+1,n]放入右边，因此有[i-1]*[i-j]种方式。</p><a id="more"></a><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span>:</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">numTrees</span><span class="hljs-params">(self, n: int)</span> -&gt; int:</span></span><br><span class="line">        arr=[<span class="hljs-number">0</span>]*(n+<span class="hljs-number">1</span>)</span><br><span class="line">        arr[<span class="hljs-number">0</span>]=<span class="hljs-number">1</span></span><br><span class="line">        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(<span class="hljs-number">1</span>,n+<span class="hljs-number">1</span>):</span><br><span class="line">            <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> range(<span class="hljs-number">1</span>,i+<span class="hljs-number">1</span>):</span><br><span class="line">                arr[i]+=arr[j<span class="hljs-number">-1</span>]*arr[i-j]</span><br><span class="line">        <span class="hljs-keyword">return</span> arr[<span class="hljs-number">-1</span>]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;原题&quot;&gt;&lt;a href=&quot;#原题&quot; class=&quot;headerlink&quot; title=&quot;原题&quot;&gt;&lt;/a&gt;原题&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/unique-binary-search-trees/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://leetcode.com/problems/unique-binary-search-trees/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Given n, how many structurally unique BST’s (binary search trees) that store values 1 … n?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;对于n个值，以i为根，则可以将[1,i-1]放入左边，[i+1,n]放入右边，因此有[i-1]*[i-j]种方式。&lt;/p&gt;
    
    </summary>
    
      <category term="leetcode" scheme="http://kavel.cn/categories/leetcode/"/>
    
    
      <category term="LeetCode" scheme="http://kavel.cn/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 刷题记录: 98. Validate Binary Search Tree [Python]</title>
    <link href="http://kavel.cn/zh-CN/LC98_Validate_Binary_Search_Tree.html"/>
    <id>http://kavel.cn/zh-CN/LC98_Validate_Binary_Search_Tree.html</id>
    <published>2019-07-24T05:00:00.000Z</published>
    <updated>2019-09-17T04:13:18.227Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原题"><a href="#原题" class="headerlink" title="原题"></a>原题</h2><blockquote><p><a href="https://leetcode.com/problems/validate-binary-search-tree/" target="_blank" rel="noopener">https://leetcode.com/problems/validate-binary-search-tree/</a></p><p>Given a binary tree, determine if it is a valid binary search tree (BST).</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>递归判断子节点:<br><a id="more"></a></p><ol><li><p>当节点为None时，即到达分支底端，返回True即该条线正确。</p></li><li><p>当min存在且当前值小于min时，返回False。</p></li><li><p>当max存在且当前值大于max时，返回False。</p></li><li><p>当不存在min和max时，开始往两头搜索。左边：最小值维持原样，最大值为当前节点的值。右边：最大值维持原样，最小值为当前节点的值。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># Definition for a binary tree node.</span></span><br><span class="line"><span class="hljs-comment"># class TreeNode:</span></span><br><span class="line"><span class="hljs-comment">#     def __init__(self, x):</span></span><br><span class="line"><span class="hljs-comment">#         self.val = x</span></span><br><span class="line"><span class="hljs-comment">#         self.left = None</span></span><br><span class="line"><span class="hljs-comment">#         self.right = None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span>:</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">isValidBST</span><span class="hljs-params">(self, root: TreeNode)</span> -&gt; bool:</span></span><br><span class="line">        <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">search</span><span class="hljs-params">(root,mi,ma)</span>:</span></span><br><span class="line">            <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> root: <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span></span><br><span class="line">            <span class="hljs-keyword">if</span> mi!=<span class="hljs-literal">None</span> <span class="hljs-keyword">and</span> root.val&lt;=mi: <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span></span><br><span class="line">            <span class="hljs-keyword">if</span> ma!=<span class="hljs-literal">None</span> <span class="hljs-keyword">and</span> root.val&gt;=ma: <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span></span><br><span class="line">            <span class="hljs-keyword">return</span> search(root.left,mi,root.val) <span class="hljs-keyword">and</span> search(root.right,root.val,ma)</span><br><span class="line">        <span class="hljs-keyword">return</span> search(root,<span class="hljs-literal">None</span>,<span class="hljs-literal">None</span>)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;原题&quot;&gt;&lt;a href=&quot;#原题&quot; class=&quot;headerlink&quot; title=&quot;原题&quot;&gt;&lt;/a&gt;原题&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/validate-binary-search-tree/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://leetcode.com/problems/validate-binary-search-tree/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Given a binary tree, determine if it is a valid binary search tree (BST).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;递归判断子节点:&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="leetcode" scheme="http://kavel.cn/categories/leetcode/"/>
    
    
      <category term="LeetCode" scheme="http://kavel.cn/tags/LeetCode/"/>
    
      <category term="Binary" scheme="http://kavel.cn/tags/Binary/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 刷题记录: 79. Word Search [Python]</title>
    <link href="http://kavel.cn/zh-CN/LC79_Word_Search.html"/>
    <id>http://kavel.cn/zh-CN/LC79_Word_Search.html</id>
    <published>2019-07-23T05:00:00.000Z</published>
    <updated>2019-09-17T04:13:18.222Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原题"><a href="#原题" class="headerlink" title="原题"></a>原题</h2><blockquote><p><a href="https://leetcode.com/problems/word-search/" target="_blank" rel="noopener">https://leetcode.com/problems/word-search/</a></p><p>Given a 2D board and a word, find if the word exists in the grid.</p><p>The word can be constructed from letters of sequentially adjacent cell, where “adjacent” cells are those horizontally or vertically neighboring. The same letter cell may not be used more than once.</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>DFS。四个方向搜寻即可。<br><a id="more"></a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span>:</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">exist</span><span class="hljs-params">(self, board: List[List[str]], word: str)</span> -&gt; bool:</span></span><br><span class="line">        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> board: <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span></span><br><span class="line">        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(len(board)):</span><br><span class="line">            <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> range(len(board[<span class="hljs-number">0</span>])):</span><br><span class="line">                <span class="hljs-keyword">if</span> self.dfs(board,i,j,word): <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span></span><br><span class="line">        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">dfs</span><span class="hljs-params">(self, board, i, j, word)</span>:</span></span><br><span class="line">        <span class="hljs-keyword">if</span> len(word)==<span class="hljs-number">0</span>: <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span></span><br><span class="line">        <span class="hljs-keyword">if</span> i&lt;<span class="hljs-number">0</span> <span class="hljs-keyword">or</span> i&gt;=len(board) <span class="hljs-keyword">or</span> j&lt;<span class="hljs-number">0</span> <span class="hljs-keyword">or</span> j&gt;=len(board[<span class="hljs-number">0</span>]) <span class="hljs-keyword">or</span> word[<span class="hljs-number">0</span>]!=board[i][j]: <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span></span><br><span class="line">        tmp,board[i][j]=board[i][j],<span class="hljs-string">'#'</span></span><br><span class="line">        res=self.dfs(board,i<span class="hljs-number">-1</span>,j,word[<span class="hljs-number">1</span>:]) <span class="hljs-keyword">or</span> self.dfs(board,i+<span class="hljs-number">1</span>,j,word[<span class="hljs-number">1</span>:]) <span class="hljs-keyword">or</span> self.dfs(board,i,j<span class="hljs-number">-1</span>,word[<span class="hljs-number">1</span>:]) <span class="hljs-keyword">or</span> self.dfs(board, i, j+<span class="hljs-number">1</span>, word[<span class="hljs-number">1</span>:])</span><br><span class="line">        board[i][j]=tmp</span><br><span class="line">        <span class="hljs-keyword">return</span> res</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;原题&quot;&gt;&lt;a href=&quot;#原题&quot; class=&quot;headerlink&quot; title=&quot;原题&quot;&gt;&lt;/a&gt;原题&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/word-search/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://leetcode.com/problems/word-search/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Given a 2D board and a word, find if the word exists in the grid.&lt;/p&gt;
&lt;p&gt;The word can be constructed from letters of sequentially adjacent cell, where “adjacent” cells are those horizontally or vertically neighboring. The same letter cell may not be used more than once.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;DFS。四个方向搜寻即可。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="leetcode" scheme="http://kavel.cn/categories/leetcode/"/>
    
    
      <category term="LeetCode" scheme="http://kavel.cn/tags/LeetCode/"/>
    
      <category term="DFS" scheme="http://kavel.cn/tags/DFS/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 刷题记录: 56. Merge Intervals [Python]</title>
    <link href="http://kavel.cn/zh-CN/LC56_Merge_Intervals.html"/>
    <id>http://kavel.cn/zh-CN/LC56_Merge_Intervals.html</id>
    <published>2019-07-22T05:00:00.000Z</published>
    <updated>2019-09-17T04:13:18.221Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原题"><a href="#原题" class="headerlink" title="原题"></a>原题</h2><blockquote><p><a href="https://leetcode.com/problems/merge-intervals/" target="_blank" rel="noopener">https://leetcode.com/problems/merge-intervals/</a></p><p>Given a collection of intervals, merge all overlapping intervals.</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>先对数组排序，然后遍历数组。设定两个变量记录左边界和右边界。<br><a id="more"></a></p><ol><li><p>对于每个范围，当其左值小于记录的右边界时，即这个范围可以被merge。此时右边界为右值与右边界的最大值，在结果数组更新最后一项的右值。</p></li><li><p>否则重新设定左边界与右边界，并将新的范围记录至结果中。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span>:</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">merge</span><span class="hljs-params">(self, intervals: List[List[int]])</span> -&gt; List[List[int]]:</span></span><br><span class="line">        <span class="hljs-keyword">if</span> len(intervals)==<span class="hljs-number">0</span>: <span class="hljs-keyword">return</span> []</span><br><span class="line">        left=right=<span class="hljs-number">-1</span></span><br><span class="line">        intervals.sort()</span><br><span class="line">        res=[]</span><br><span class="line">        <span class="hljs-keyword">for</span> intv <span class="hljs-keyword">in</span> intervals:</span><br><span class="line">            <span class="hljs-keyword">if</span> right&gt;=intv[<span class="hljs-number">0</span>]:</span><br><span class="line">                right=max(intv[<span class="hljs-number">1</span>],right)</span><br><span class="line">                res[<span class="hljs-number">-1</span>][<span class="hljs-number">1</span>]=right</span><br><span class="line"></span><br><span class="line">            <span class="hljs-keyword">else</span>:</span><br><span class="line">                left,right=intv</span><br><span class="line">                res.append(intv)</span><br><span class="line">        <span class="hljs-keyword">return</span> res</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;原题&quot;&gt;&lt;a href=&quot;#原题&quot; class=&quot;headerlink&quot; title=&quot;原题&quot;&gt;&lt;/a&gt;原题&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/merge-intervals/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://leetcode.com/problems/merge-intervals/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Given a collection of intervals, merge all overlapping intervals.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;先对数组排序，然后遍历数组。设定两个变量记录左边界和右边界。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="leetcode" scheme="http://kavel.cn/categories/leetcode/"/>
    
    
      <category term="LeetCode" scheme="http://kavel.cn/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 刷题记录: 46. Permutations [Python]</title>
    <link href="http://kavel.cn/zh-CN/LC46_Permutations.html"/>
    <id>http://kavel.cn/zh-CN/LC46_Permutations.html</id>
    <published>2019-07-21T05:00:00.000Z</published>
    <updated>2019-09-17T04:13:18.219Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原题"><a href="#原题" class="headerlink" title="原题"></a>原题</h2><blockquote><p><a href="https://leetcode.com/problems/permutations/" target="_blank" rel="noopener">https://leetcode.com/problems/permutations/</a></p><p>Given a collection of distinct integers, return all possible permutations.</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>Backtrack。当temp长度等于所有数字时，添加进结果。否则遍历数字，每个数字添加进temp中，进行下一次迭代。当temp中存在相同数字时跳过。<br><a id="more"></a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span>:</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">permute</span><span class="hljs-params">(self, nums: List[int])</span> -&gt; List[List[int]]:</span></span><br><span class="line">        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> nums: <span class="hljs-keyword">return</span> [[]]</span><br><span class="line">        result=[]</span><br><span class="line">        self.backtrack(nums,[],result)</span><br><span class="line">        <span class="hljs-keyword">return</span> result</span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">backtrack</span><span class="hljs-params">(self, nums, temp,result)</span>:</span></span><br><span class="line">        <span class="hljs-keyword">if</span> len(temp)==len(nums): result.append(temp[:])</span><br><span class="line">        <span class="hljs-keyword">else</span>:</span><br><span class="line">            <span class="hljs-keyword">for</span> num <span class="hljs-keyword">in</span> nums:</span><br><span class="line">                <span class="hljs-keyword">if</span> num <span class="hljs-keyword">in</span> temp: <span class="hljs-keyword">continue</span></span><br><span class="line">                temp.append(num)</span><br><span class="line">                self.backtrack(nums,temp,result)</span><br><span class="line">                temp.pop()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;原题&quot;&gt;&lt;a href=&quot;#原题&quot; class=&quot;headerlink&quot; title=&quot;原题&quot;&gt;&lt;/a&gt;原题&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/permutations/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://leetcode.com/problems/permutations/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Given a collection of distinct integers, return all possible permutations.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;Backtrack。当temp长度等于所有数字时，添加进结果。否则遍历数字，每个数字添加进temp中，进行下一次迭代。当temp中存在相同数字时跳过。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="leetcode" scheme="http://kavel.cn/categories/leetcode/"/>
    
    
      <category term="LeetCode" scheme="http://kavel.cn/tags/LeetCode/"/>
    
      <category term="Backtrack" scheme="http://kavel.cn/tags/Backtrack/"/>
    
      <category term="DFS" scheme="http://kavel.cn/tags/DFS/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 刷题记录: 48. Rotate Image [Python]</title>
    <link href="http://kavel.cn/zh-CN/LC48_Rotate_image.html"/>
    <id>http://kavel.cn/zh-CN/LC48_Rotate_image.html</id>
    <published>2019-07-21T05:00:00.000Z</published>
    <updated>2019-09-17T04:13:18.220Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原题"><a href="#原题" class="headerlink" title="原题"></a>原题</h2><blockquote><p><a href="https://leetcode.com/problems/rotate-image/" target="_blank" rel="noopener">https://leetcode.com/problems/rotate-image/</a></p><p>You are given an n x n 2D matrix representing an image.</p><p>Rotate the image by 90 degrees (clockwise).</p><p>You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>先转置再x轴颠倒。<br><a id="more"></a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span>:</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">rotate</span><span class="hljs-params">(self, matrix: List[List[int]])</span> -&gt; <span class="hljs-keyword">None</span>:</span></span><br><span class="line">        <span class="hljs-string">"""</span></span><br><span class="line"><span class="hljs-string">        Do not return anything, modify matrix in-place instead.</span></span><br><span class="line"><span class="hljs-string">        """</span></span><br><span class="line">        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(len(matrix)):</span><br><span class="line">            <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> range(i):</span><br><span class="line">                matrix[i][j],matrix[j][i]=matrix[j][i],matrix[i][j]</span><br><span class="line">        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(len(matrix)):</span><br><span class="line">            matrix[i][:]=matrix[i][::<span class="hljs-number">-1</span>]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;原题&quot;&gt;&lt;a href=&quot;#原题&quot; class=&quot;headerlink&quot; title=&quot;原题&quot;&gt;&lt;/a&gt;原题&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/rotate-image/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://leetcode.com/problems/rotate-image/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You are given an n x n 2D matrix representing an image.&lt;/p&gt;
&lt;p&gt;Rotate the image by 90 degrees (clockwise).&lt;/p&gt;
&lt;p&gt;You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;先转置再x轴颠倒。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="leetcode" scheme="http://kavel.cn/categories/leetcode/"/>
    
    
      <category term="LeetCode" scheme="http://kavel.cn/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 刷题记录: 55. Jump Game [Python]</title>
    <link href="http://kavel.cn/zh-CN/LC55_Jump_Game.html"/>
    <id>http://kavel.cn/zh-CN/LC55_Jump_Game.html</id>
    <published>2019-07-21T05:00:00.000Z</published>
    <updated>2019-09-17T04:13:18.220Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原题"><a href="#原题" class="headerlink" title="原题"></a>原题</h2><blockquote><p><a href="https://leetcode.com/problems/jump-game/" target="_blank" rel="noopener">https://leetcode.com/problems/jump-game/</a></p><p>Given an array of non-negative integers, you are initially positioned at the first index of the array.</p><p>Each element in the array represents your maximum jump length at that position.</p><p>Determine if you are able to reach the last index.</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>设定一个变量reachable记录当前能够达到的最远值。然后遍历nums:<br><a id="more"></a></p><ol><li><p>当reachable&lt;i时，即已经不能到达该处。返回False。</p></li><li><p>否则更新reachable，大小为当前能走的最远值以及此处可以走的最远值之间的最大值。</p></li><li><p>接着判断reachable是否大于nums，若是即可提前返回True跳出。</p></li></ol><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span>:</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">canJump</span><span class="hljs-params">(self, nums: List[int])</span> -&gt; bool:</span></span><br><span class="line">        reachable=<span class="hljs-number">0</span></span><br><span class="line">        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(len(nums)):</span><br><span class="line">            <span class="hljs-keyword">if</span> reachable&lt;i:<span class="hljs-keyword">return</span> <span class="hljs-literal">False</span></span><br><span class="line">            reachable=max(reachable,i+nums[i])</span><br><span class="line">            <span class="hljs-keyword">if</span> reachable&gt;=len(nums)<span class="hljs-number">-1</span>: <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;原题&quot;&gt;&lt;a href=&quot;#原题&quot; class=&quot;headerlink&quot; title=&quot;原题&quot;&gt;&lt;/a&gt;原题&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/jump-game/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://leetcode.com/problems/jump-game/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Given an array of non-negative integers, you are initially positioned at the first index of the array.&lt;/p&gt;
&lt;p&gt;Each element in the array represents your maximum jump length at that position.&lt;/p&gt;
&lt;p&gt;Determine if you are able to reach the last index.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;设定一个变量reachable记录当前能够达到的最远值。然后遍历nums:&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="leetcode" scheme="http://kavel.cn/categories/leetcode/"/>
    
    
      <category term="LeetCode" scheme="http://kavel.cn/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 刷题记录: 31. Next Permutation [Python]</title>
    <link href="http://kavel.cn/zh-CN/LC31_Next_Premutation.html"/>
    <id>http://kavel.cn/zh-CN/LC31_Next_Premutation.html</id>
    <published>2019-07-20T05:00:00.000Z</published>
    <updated>2019-09-17T04:13:18.217Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原题"><a href="#原题" class="headerlink" title="原题"></a>原题</h2><blockquote><p><a href="https://leetcode.com/problems/next-permutation/" target="_blank" rel="noopener">https://leetcode.com/problems/next-permutation/</a></p><p>Implement next permutation, which rearranges numbers into the lexicographically next greater permutation of numbers.</p><p>If such arrangement is not possible, it must rearrange it as the lowest possible order (ie, sorted in ascending order).</p><p>The replacement must be in-place and use only constant extra memory.</p><p>Here are some examples. Inputs are in the left-hand column and its corresponding outputs are in the right-hand column.</p><p>1,2,3 → 1,3,2<br>3,2,1 → 1,2,3<br>1,1,5 → 1,5,1</p></blockquote><a id="more"></a><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol><li><p>指针i从后往前找到第一个前面比后面小的数nums[i-1]，此时i:end均为从大到小排序。</p></li><li><p>指针j从后往前找到第一个比nums[i-1]大的数nums[j]。此时nums[j]为i:end中的最小数。</p></li><li><p>交换nums[i-1]与nums[j]，此时i:end依然为从大到小排序。</p></li><li><p>将i:end倒序，此时变成从小到大排序。完成。</p></li></ol><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span>:</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">nextPermutation</span><span class="hljs-params">(self, nums: List[int])</span> -&gt; <span class="hljs-keyword">None</span>:</span></span><br><span class="line">        <span class="hljs-string">"""</span></span><br><span class="line"><span class="hljs-string">        Do not return anything, modify nums in-place instead.</span></span><br><span class="line"><span class="hljs-string">        """</span></span><br><span class="line">        n=len(nums)</span><br><span class="line">        <span class="hljs-keyword">if</span> n&lt;<span class="hljs-number">2</span>: <span class="hljs-keyword">return</span></span><br><span class="line">        i=j=n<span class="hljs-number">-1</span></span><br><span class="line">        <span class="hljs-keyword">while</span> i&gt;<span class="hljs-number">0</span> <span class="hljs-keyword">and</span> nums[i<span class="hljs-number">-1</span>]&gt;=nums[i]:</span><br><span class="line">            i-=<span class="hljs-number">1</span></span><br><span class="line">        <span class="hljs-keyword">if</span> i&gt;<span class="hljs-number">0</span>:</span><br><span class="line">            <span class="hljs-keyword">while</span> nums[j]&lt;=nums[i<span class="hljs-number">-1</span>]:</span><br><span class="line">                j-=<span class="hljs-number">1</span></span><br><span class="line">            nums[i<span class="hljs-number">-1</span>],nums[j]=nums[j],nums[i<span class="hljs-number">-1</span>]</span><br><span class="line">        nums[i:]=reversed(nums[i:])</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;原题&quot;&gt;&lt;a href=&quot;#原题&quot; class=&quot;headerlink&quot; title=&quot;原题&quot;&gt;&lt;/a&gt;原题&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/next-permutation/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://leetcode.com/problems/next-permutation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Implement next permutation, which rearranges numbers into the lexicographically next greater permutation of numbers.&lt;/p&gt;
&lt;p&gt;If such arrangement is not possible, it must rearrange it as the lowest possible order (ie, sorted in ascending order).&lt;/p&gt;
&lt;p&gt;The replacement must be in-place and use only constant extra memory.&lt;/p&gt;
&lt;p&gt;Here are some examples. Inputs are in the left-hand column and its corresponding outputs are in the right-hand column.&lt;/p&gt;
&lt;p&gt;1,2,3 → 1,3,2&lt;br&gt;3,2,1 → 1,2,3&lt;br&gt;1,1,5 → 1,5,1&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="leetcode" scheme="http://kavel.cn/categories/leetcode/"/>
    
    
      <category term="LeetCode" scheme="http://kavel.cn/tags/LeetCode/"/>
    
      <category term="Premutation" scheme="http://kavel.cn/tags/Premutation/"/>
    
      <category term="Tricky" scheme="http://kavel.cn/tags/Tricky/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 刷题记录: 42. Trapping Rain Water [Python]</title>
    <link href="http://kavel.cn/zh-CN/LC42_Trapping_Rain_Water.html"/>
    <id>http://kavel.cn/zh-CN/LC42_Trapping_Rain_Water.html</id>
    <published>2019-07-20T05:00:00.000Z</published>
    <updated>2019-09-17T04:13:18.218Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原题"><a href="#原题" class="headerlink" title="原题"></a>原题</h2><blockquote><p><a href="https://leetcode.com/problems/trapping-rain-water/" target="_blank" rel="noopener">https://leetcode.com/problems/trapping-rain-water/</a></p><p>Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>使用双指针，分别从两头往最高处逼近。每次经过刷新左边和右边的最高值，该处结果等于最高值与当前值的差。<br><a id="more"></a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span>:</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">trap</span><span class="hljs-params">(self, height: List[int])</span> -&gt; int:</span></span><br><span class="line">        res=<span class="hljs-number">0</span></span><br><span class="line">        left=<span class="hljs-number">0</span></span><br><span class="line">        right=len(height)<span class="hljs-number">-1</span></span><br><span class="line">        max_left=max_right=<span class="hljs-number">0</span></span><br><span class="line">        <span class="hljs-keyword">while</span> left&lt;=right:</span><br><span class="line">            <span class="hljs-keyword">if</span> height[left]&lt;height[right]:</span><br><span class="line">                max_left=max(max_left,height[left])</span><br><span class="line">                res+=max_left-height[left]</span><br><span class="line">                left+=<span class="hljs-number">1</span></span><br><span class="line">            <span class="hljs-keyword">else</span>:</span><br><span class="line">                max_right=max(max_right,height[right])</span><br><span class="line">                res+=max_right-height[right]</span><br><span class="line">                right-=<span class="hljs-number">1</span></span><br><span class="line">        <span class="hljs-keyword">return</span> res</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;原题&quot;&gt;&lt;a href=&quot;#原题&quot; class=&quot;headerlink&quot; title=&quot;原题&quot;&gt;&lt;/a&gt;原题&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/trapping-rain-water/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://leetcode.com/problems/trapping-rain-water/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;使用双指针，分别从两头往最高处逼近。每次经过刷新左边和右边的最高值，该处结果等于最高值与当前值的差。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="leetcode" scheme="http://kavel.cn/categories/leetcode/"/>
    
    
      <category term="LeetCode" scheme="http://kavel.cn/tags/LeetCode/"/>
    
      <category term="Triky" scheme="http://kavel.cn/tags/Triky/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 刷题记录: 19. Remove Nth Node From End of List [Python]</title>
    <link href="http://kavel.cn/zh-CN/LC19_Remove_Nth_Node_From_End_of_List.html"/>
    <id>http://kavel.cn/zh-CN/LC19_Remove_Nth_Node_From_End_of_List.html</id>
    <published>2019-07-19T05:00:00.000Z</published>
    <updated>2019-09-17T04:13:18.215Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原题"><a href="#原题" class="headerlink" title="原题"></a>原题</h2><blockquote><p><a href="https://leetcode.com/problems/remove-nth-node-from-end-of-list/" target="_blank" rel="noopener">https://leetcode.com/problems/remove-nth-node-from-end-of-list/</a></p><p>Given a linked list, remove the n-th node from the end of list and return its head.</p><p>Follow up:</p><p>Could you do this in one pass?</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>使用两个指针fast以及slow，fast先出发，slow相隔n位再出发。当fast走到尽头时slow跳过下一指针即可。<br><a id="more"></a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># Definition for singly-linked list.</span></span><br><span class="line"><span class="hljs-comment"># class ListNode:</span></span><br><span class="line"><span class="hljs-comment">#     def __init__(self, x):</span></span><br><span class="line"><span class="hljs-comment">#         self.val = x</span></span><br><span class="line"><span class="hljs-comment">#         self.next = None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span>:</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">removeNthFromEnd</span><span class="hljs-params">(self, head: ListNode, n: int)</span> -&gt; ListNode:</span></span><br><span class="line">        slow=fast=self</span><br><span class="line">        self.next=head</span><br><span class="line">        <span class="hljs-keyword">while</span> fast.next:</span><br><span class="line">            <span class="hljs-keyword">if</span> n:</span><br><span class="line">                n-=<span class="hljs-number">1</span></span><br><span class="line">            <span class="hljs-keyword">else</span>:</span><br><span class="line">                slow=slow.next</span><br><span class="line">            fast=fast.next</span><br><span class="line">        slow.next=slow.next.next</span><br><span class="line">        <span class="hljs-keyword">return</span> self.next</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;原题&quot;&gt;&lt;a href=&quot;#原题&quot; class=&quot;headerlink&quot; title=&quot;原题&quot;&gt;&lt;/a&gt;原题&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/remove-nth-node-from-end-of-list/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://leetcode.com/problems/remove-nth-node-from-end-of-list/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Given a linked list, remove the n-th node from the end of list and return its head.&lt;/p&gt;
&lt;p&gt;Follow up:&lt;/p&gt;
&lt;p&gt;Could you do this in one pass?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;使用两个指针fast以及slow，fast先出发，slow相隔n位再出发。当fast走到尽头时slow跳过下一指针即可。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="leetcode" scheme="http://kavel.cn/categories/leetcode/"/>
    
    
      <category term="LeetCode" scheme="http://kavel.cn/tags/LeetCode/"/>
    
      <category term="LinkedList" scheme="http://kavel.cn/tags/LinkedList/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 刷题记录: 22. Generate Parentheses [Python]</title>
    <link href="http://kavel.cn/zh-CN/LC22_Generate_Parentheses.html"/>
    <id>http://kavel.cn/zh-CN/LC22_Generate_Parentheses.html</id>
    <published>2019-07-19T05:00:00.000Z</published>
    <updated>2019-09-17T04:13:18.216Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原题"><a href="#原题" class="headerlink" title="原题"></a>原题</h2><blockquote><p><a href="https://leetcode.com/problems/generate-parentheses/" target="_blank" rel="noopener">https://leetcode.com/problems/generate-parentheses/</a></p><p>Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>使用动态规划，分析子问题：每次加括号要么加在外面，要么加在旁边。<br><a id="more"></a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span>:</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">generateParenthesis</span><span class="hljs-params">(self, n: int)</span> -&gt; List[str]:</span></span><br><span class="line">        dp=[[] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(n+<span class="hljs-number">1</span>)]</span><br><span class="line">        dp[<span class="hljs-number">0</span>].append(<span class="hljs-string">''</span>)</span><br><span class="line">        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(n+<span class="hljs-number">1</span>):</span><br><span class="line">            <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> range(i):</span><br><span class="line">                dp[i]+=[<span class="hljs-string">'('</span>+inner+<span class="hljs-string">')'</span>+outer <span class="hljs-keyword">for</span> inner <span class="hljs-keyword">in</span> dp[j] <span class="hljs-keyword">for</span> outer <span class="hljs-keyword">in</span> dp[i-j<span class="hljs-number">-1</span>]]</span><br><span class="line">        <span class="hljs-keyword">return</span> dp[n]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;原题&quot;&gt;&lt;a href=&quot;#原题&quot; class=&quot;headerlink&quot; title=&quot;原题&quot;&gt;&lt;/a&gt;原题&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/generate-parentheses/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://leetcode.com/problems/generate-parentheses/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;使用动态规划，分析子问题：每次加括号要么加在外面，要么加在旁边。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="leetcode" scheme="http://kavel.cn/categories/leetcode/"/>
    
    
      <category term="LeetCode" scheme="http://kavel.cn/tags/LeetCode/"/>
    
      <category term="Dynamic Programming" scheme="http://kavel.cn/tags/Dynamic-Programming/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 刷题记录: 11. Container With Most Water [Python]</title>
    <link href="http://kavel.cn/zh-CN/LC11_Container_With_Most_Water.html"/>
    <id>http://kavel.cn/zh-CN/LC11_Container_With_Most_Water.html</id>
    <published>2019-07-18T05:00:00.000Z</published>
    <updated>2019-09-17T04:13:18.214Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原题"><a href="#原题" class="headerlink" title="原题"></a>原题</h2><blockquote><p><a href="https://leetcode.com/problems/container-with-most-water/" target="_blank" rel="noopener">https://leetcode.com/problems/container-with-most-water/</a></p><p>Given n non-negative integers a1, a2, …, an , where each represents a point at coordinate (i, ai). nvertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.</p><p>Note: You may not slant the container and n is at least 2.</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>贪心算法，从左右两边开始，从短的一边往中间缩进并记录最大值。由于短板效应从短的一边往中间缩进是最有利的。<br><a id="more"></a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span>:</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">maxArea</span><span class="hljs-params">(self, height: List[int])</span> -&gt; int:</span></span><br><span class="line">        l,r,m=<span class="hljs-number">0</span>,len(height)<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span></span><br><span class="line">        <span class="hljs-keyword">while</span>(l&lt;r):</span><br><span class="line">            m=max(m,min(height[l],height[r])*(r-l))</span><br><span class="line">            <span class="hljs-keyword">if</span> height[l]&lt;height[r]:</span><br><span class="line">                l+=<span class="hljs-number">1</span></span><br><span class="line">            <span class="hljs-keyword">else</span>:</span><br><span class="line">                r-=<span class="hljs-number">1</span></span><br><span class="line">        <span class="hljs-keyword">return</span> m</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;原题&quot;&gt;&lt;a href=&quot;#原题&quot; class=&quot;headerlink&quot; title=&quot;原题&quot;&gt;&lt;/a&gt;原题&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/container-with-most-water/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://leetcode.com/problems/container-with-most-water/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Given n non-negative integers a1, a2, …, an , where each represents a point at coordinate (i, ai). nvertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.&lt;/p&gt;
&lt;p&gt;Note: You may not slant the container and n is at least 2.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;贪心算法，从左右两边开始，从短的一边往中间缩进并记录最大值。由于短板效应从短的一边往中间缩进是最有利的。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="leetcode" scheme="http://kavel.cn/categories/leetcode/"/>
    
    
      <category term="LeetCode" scheme="http://kavel.cn/tags/LeetCode/"/>
    
      <category term="Greedy" scheme="http://kavel.cn/tags/Greedy/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 刷题记录: 1. Two Sum [Java]</title>
    <link href="http://kavel.cn/zh-CN/LC1_Two_Sum.html"/>
    <id>http://kavel.cn/zh-CN/LC1_Two_Sum.html</id>
    <published>2019-07-18T05:00:00.000Z</published>
    <updated>2019-09-17T04:13:18.211Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原题"><a href="#原题" class="headerlink" title="原题"></a>原题</h2><blockquote><p><a href="https://leetcode.com/problems/two-sum/" target="_blank" rel="noopener">https://leetcode.com/problems/two-sum/</a></p><p>Given an array of integers, return indices of the two numbers such that they add up to a specific target.</p><p>You may assume that each input would have exactly one solution, and you may not use the same element twice.</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>使用hashmap查表，拿到数字首先查找余值是否在表内，若在的话直接返回表内的对应值。接着将数字以及index存入表内。<br><a id="more"></a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight java hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span>[] twoSum(<span class="hljs-keyword">int</span>[] nums, <span class="hljs-keyword">int</span> target) &#123;</span><br><span class="line">        HashMap&lt;Integer, Integer&gt; h = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;nums.length;i++)&#123;</span><br><span class="line">            <span class="hljs-keyword">int</span> residue=target-nums[i];</span><br><span class="line">            <span class="hljs-keyword">if</span>(h.containsKey(residue))&#123;</span><br><span class="line">                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[]&#123;h.get(residue),i&#125;;</span><br><span class="line">            &#125;</span><br><span class="line">            h.put(nums[i],i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalArgumentException(<span class="hljs-string">"No solution"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;原题&quot;&gt;&lt;a href=&quot;#原题&quot; class=&quot;headerlink&quot; title=&quot;原题&quot;&gt;&lt;/a&gt;原题&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/two-sum/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://leetcode.com/problems/two-sum/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Given an array of integers, return indices of the two numbers such that they add up to a specific target.&lt;/p&gt;
&lt;p&gt;You may assume that each input would have exactly one solution, and you may not use the same element twice.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;使用hashmap查表，拿到数字首先查找余值是否在表内，若在的话直接返回表内的对应值。接着将数字以及index存入表内。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="leetcode" scheme="http://kavel.cn/categories/leetcode/"/>
    
    
      <category term="LeetCode" scheme="http://kavel.cn/tags/LeetCode/"/>
    
      <category term="Hashmap" scheme="http://kavel.cn/tags/Hashmap/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 刷题记录: 5. Longest Palindromic Substring [Python]</title>
    <link href="http://kavel.cn/zh-CN/LC5_Longest_Palindromic_Substring.html"/>
    <id>http://kavel.cn/zh-CN/LC5_Longest_Palindromic_Substring.html</id>
    <published>2019-07-18T05:00:00.000Z</published>
    <updated>2019-09-17T04:13:18.213Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原题"><a href="#原题" class="headerlink" title="原题"></a>原题</h2><blockquote><p><a href="https://leetcode.com/problems/longest-palindromic-substring/" target="_blank" rel="noopener">https://leetcode.com/problems/longest-palindromic-substring/</a></p><p>Given a string s, find the longest palindromic substring in s. You may assume that the maximum length of s is 1000.</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>马拉车方法 (Manacher’s Algorithm) 利用回文的性质减少运算。<br><a id="more"></a></p><ol><li><p>考虑到回文中心可能位于两字符之间，将字符串之间的间隔使用符号（#）代替。</p></li><li><p>定义radius数组，记录每个位置的最大回文半径。</p></li><li><p>对于一个回文串的中心c，令R为这个回文串的右半径(R=c+radius[c])，即回文串范围为[c-R, c+R]。根据回文的性质，右半径内的字符 i（i-&gt;(c, c+R)）其回文半径与回文串左半径内的镜像字符 j（j=(2*c-i)）有关。当：</p><ul><li><p>j的回文范围在回文串范围以内时，i的回文与j的回文完全一致。 (radius[i]=radius[j])</p></li><li><p>j的回文范围在回文串范围以外时，只能确保i的回文范围在右半径R之内。 (radius[i]&gt;=R-i+1)</p></li></ul></li><li><p>尝试扩展i的回文范围，考察T[i+radius[i]]==T[i-radius[i]]。若属于3.1情况将直接跳出。若属于3.2情况将扩大i的回文范围。</p></li><li><p>当i的回文范围大于右半径R时，将该位置作为中心(c=i)，定义右半径R(R=c+radius[c])，重复步骤345。<br>记录radius以及回文串的最大值。所有位置遍历完后返回最大回文串。</p></li></ol><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span>:</span></span><br><span class="line">    <span class="hljs-string">"""</span></span><br><span class="line"><span class="hljs-string">    @param s: input string</span></span><br><span class="line"><span class="hljs-string">    @return: the longest palindromic substring</span></span><br><span class="line"><span class="hljs-string">    """</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">longestPalindrome</span><span class="hljs-params">(self, s)</span>:</span></span><br><span class="line">        <span class="hljs-comment"># write your code here</span></span><br><span class="line">        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> s:</span><br><span class="line">            <span class="hljs-keyword">return</span> s</span><br><span class="line">        T = <span class="hljs-string">'#'</span></span><br><span class="line">        <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> s:</span><br><span class="line">            T += c</span><br><span class="line">            T += <span class="hljs-string">'#'</span></span><br><span class="line">        radius = [<span class="hljs-number">0</span>]*len(T)</span><br><span class="line"></span><br><span class="line">        c, r = <span class="hljs-number">0</span>, <span class="hljs-number">-1</span></span><br><span class="line">        maxr, maxs = <span class="hljs-number">-1</span>, <span class="hljs-string">''</span></span><br><span class="line">        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(len(T)):</span><br><span class="line">            <span class="hljs-keyword">if</span> r &gt; i:</span><br><span class="line">                j = c-i-c</span><br><span class="line">                radius[i] = min(radius[j], c+r<span class="hljs-number">-1</span>)</span><br><span class="line"></span><br><span class="line">            <span class="hljs-keyword">while</span> <span class="hljs-number">-1</span> &lt; i-radius[i] <span class="hljs-keyword">and</span> i+radius[i] &lt; len(T):</span><br><span class="line">                <span class="hljs-keyword">if</span> T[i-radius[i]] == T[i+radius[i]]:</span><br><span class="line">                    radius[i] += <span class="hljs-number">1</span></span><br><span class="line">                <span class="hljs-keyword">else</span>:</span><br><span class="line">                    <span class="hljs-keyword">break</span></span><br><span class="line"></span><br><span class="line">            <span class="hljs-keyword">if</span> radius[i] &gt;= r:</span><br><span class="line">                c, r = i, radius[i]<span class="hljs-number">-1</span></span><br><span class="line">            <span class="hljs-keyword">if</span> r &gt; maxr:</span><br><span class="line">                maxr = r</span><br><span class="line">                maxs = s[(i-r)//<span class="hljs-number">2</span> : (i+r)//<span class="hljs-number">2</span>]</span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">return</span> maxs</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;原题&quot;&gt;&lt;a href=&quot;#原题&quot; class=&quot;headerlink&quot; title=&quot;原题&quot;&gt;&lt;/a&gt;原题&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/longest-palindromic-substring/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://leetcode.com/problems/longest-palindromic-substring/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Given a string s, find the longest palindromic substring in s. You may assume that the maximum length of s is 1000.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;马拉车方法 (Manacher’s Algorithm) 利用回文的性质减少运算。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="leetcode" scheme="http://kavel.cn/categories/leetcode/"/>
    
    
      <category term="LeetCode" scheme="http://kavel.cn/tags/LeetCode/"/>
    
      <category term="Manacher&#39;s Algorithm" scheme="http://kavel.cn/tags/Manacher-s-Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>拖延症的救星！如何使用2Do打造一个实用的GTD®工具</title>
    <link href="http://kavel.cn/zh-CN/2do.html"/>
    <id>http://kavel.cn/zh-CN/2do.html</id>
    <published>2018-08-04T00:13:39.000Z</published>
    <updated>2019-09-16T01:30:29.841Z</updated>
    
    <content type="html"><![CDATA[<p>作为一个拖延症晚期的选手，经常视deadline为第一生产力，不到最后一分钟坚决不做事¯\_(ツ)_/¯。这使得在日常生活中，经常会将一骡子未完成的事情记在脑子中。再加上经常忘事的属性，久而久之就会将一些需要做的事情彻底遗忘在脑海中，不得不说深受其害。我曾经非常希望能够改掉忘记完成事情的这个坏毛病，理论上来说，遇到事情第一时间完成便是最好的了。但是，拖延症是改不了的。这辈子也改不了的。那么，如何改变这样的现状呢？正在挠头之际，GTD®出现了。<br><a id="more"></a></p><p><img src="2do/gtd-tag-whitebox.svg" alt></p><p><strong><a href="https://gettingthingsdone.com/" target="_blank" rel="noopener">GTD®</a>（又称“尽管去做”，Getting Things Done®)</strong> 源自David Allen的同名书籍，是一种行为管理的方法。这种方法要求个人将目前正在进行的所有工作以及任务使用 <strong>记录</strong> 的方式（通过纸笔、电子设备等）从头脑中移出来，使得这些外部设备充当 “<strong>第二大脑</strong>”，让自己 <strong>不再需要在进行一项工作的同时惦记着其他未完成的工作</strong>，从而能够专心致志地完成当前的工作，在同时面对一大堆工作的时候也能够有条不紊地处理。</p><p>不过，GTD®所承担的“第二大脑”，又和印象笔记所推崇的“第二大脑”有一定区别。在印象笔记中，“第二大脑”所承担的任务是让外部设备辅助记下各种生活中的资料以及想法，而GTD®的作用则更像是RPG游戏中的“任务列表”：<strong>让外部设备来辅助记下目前以及以后需要做的工作。</strong>也许有人会说，这不就是Todo嘛，是的，但又不是。其实GTD®不过是经过改造的一种Todo的使用方式。但这种新的使用方式却让Todo的效率有了极大提高。也因为如此，<strong>只要有一款上手的Todo应用，经过些许调整就能够无缝转换到GTD®的方式来</strong>，转换成本非常低。</p><p>对于第一次接触GTD®的人来说，最全面的入门方式当然就是去看原著。网上也有中文的<a href="https://www.mifengtd.cn/articles/getting_things_done_cn_download.html" target="_blank" rel="noopener">翻译版本</a>可以参考。不过原书由于出版的年代比较久远，使用的是比较原始的纸张记录的方式，对于互联网以及无纸化办公普及的今天相比有些落后。对于没有碰过纸笔快一年的我来说，再用回硬核的笔记本的方法实在太麻烦了。万幸的是手机里还藏着一款Todo应用—— <strong>2Do</strong>。因此在读完全书以后，我尝试将书中的概念逐一映射到2Do里面，总结了一套使用2Do作为GTD®工具的方案。经过两三个月的修改以及使用，自以为这套方法已经进化得比较成熟了，所以在这里放出来给大家参考一下。</p><h1 id="GTD®-on-2Do"><a href="#GTD®-on-2Do" class="headerlink" title="GTD® on 2Do"></a>GTD® on 2Do</h1><p><img src="2do/2Do-2-Mac-128.png" alt></p><p><a href="https://www.2doapp.com/" target="_blank" rel="noopener">2Do</a>是一款比较全面的Todo类应用。它支持iOS/Mac/Android三种平台，可以添加<code>任务(Task)</code>、<code>项目(Project)</code>、以及<code>清单(Checklist)</code>三种任务类别，并且能够为每项任务标记<code>标签(Tags)</code>；在分类功能中，2Do支持进行分类的一般<code>列表(List)</code>，以及最重要的 <strong>智能列表(Smart List)</strong> 。智能列表实际上是一个可保存筛选参数的筛选器，他可以从所有任务中按照条件筛选出符合要求的任务并且展示出来。通过创建一系列智能列表我们就可以得到一系列内容随任务状态而改变的动态列表，这也是在这套方法中GTD®能够实现的基础。具体的细节会在实际操作中进行演示。</p><h1 id="Inbox"><a href="#Inbox" class="headerlink" title="Inbox"></a>Inbox</h1><p><img src="2do/gtd-workflow.gif" alt></p><p>从上图可以看出，在GTD®的概念中，所有的想法（以及工作，以及任务）首先应该去到的地方应该是”In”，也就是 <strong>Inbox</strong> 。意思是说，当脑海中突然闪现某种想法的时候，或者有一大堆任务等待着倾诉的时候，应当第一时间把它们扔进 <strong>Inbox</strong> 区域中。不过在这里，与一般Todo记录事件的方式不同在于，GTD®不要求第一时间将添加进来的记录进行分类。<strong>Inbox</strong>作为事件的缓冲区域，所有进来的内容无需做任何处理，直接扔进来就好了。因此可以看到我的 <strong>Inbox</strong> 区域基本上是杂乱无章的。</p><p><img src="2do/inbox.png" alt></p><p>因此，制定一个专门的时间用于整理 <strong>Inbox</strong> 中的内容显得尤其重要。在整理的时候，首先需要制定一个规则。必须从上往下，或从下往上处理所有当前的内容，而不允许有跳过的情况。这一点Allen在书中曾明确要求过，就是为了杜绝积压的现象出现。因为假如有一条记录一直压在Inbox中从来不去处理，那么久而久之就会习惯积压事件，那么 <strong>Inbox</strong> 就失去了作为 <strong>事件缓冲区</strong> 的意义。</p><h1 id="下一步是什么？"><a href="#下一步是什么？" class="headerlink" title="下一步是什么？"></a>下一步是什么？</h1><p>对于事件的整理部分，GTD®制定了一系列要求。对于每一条记录，首先应当考虑的是“<strong>下一步是什么？</strong>”。比如上面截图中的某一条记录<em>Blog for 2Do</em>:</p><p><img src="2do/blog1.jpg" alt></p><p>因为<em>Blog for 2Do</em>是一个工作，因此GTD®要求列出这个工作的接下来需要进行的具体操作：</p><blockquote><p>为2Do写博客：</p><ul><li>新建一份Markdown文档</li><li>查找GTD资料</li><li>在2Do中新建一份适当的演示用事件</li><li>提前操作一遍并记录实际操作</li><li>整理最终文档</li><li>发布博客</li></ul></blockquote><p>因此，我将这条记录的类别由默认的<code>任务(Task)</code>变成<code>项目(Project)</code>。在2Do中，一个<code>项目</code>中可以包含多个<code>任务</code>，因此很适合用来记录 <strong>下一步动作</strong>。</p><p><img src="2do/blog2.jpg" alt></p><blockquote><p>值得一提的是，原始GTD®只需要考虑这份工作的 <strong>下一步动作(Next Action)</strong> 是什么，注意是Action而不是Action<strong>s</strong>。因此理论上一个工作的列表中最后一项就是当前需要完成的<em>下一步动作</em>，完成一项动作之后再继续记录下一项。但是我习惯于一次性把所有步骤都考虑好，只记录一项只会让我在脑海里不断地演绎下一步下一步。。。反而更加让我寝食不安了。因此我把所有步骤都记录下来了。<strong>如果习惯一步一步来的同学也可以使用GTD®的正统做法，只记录一步。</strong> 当然2Do的标签功能告诉我，<strong>这不要紧</strong>。好奇的同学可以<a href="#下一步怎么做？">继续看下去</a>:)</p></blockquote><p>接下来，GTD®要求将这份工作按照使用场景作分类。在2Do中，可以简单地使用一般<code>列表(List)</code>对各个场景进行分类。对于 <strong>能够进行操作</strong>的任务，我目前分有<code>个人(Personal)</code>以及<code>工作(Work)</code>两个类别。对于 <strong>不能立即进行</strong> 的任务，我设置了<code>稍后阅读(Read later)</code>以及<code>点子/以后再做(Ideas/someday)</code>两个类别。因此写博客的任务便分配到了<code>个人</code>列表中。</p><p><img src="2do/blog3.jpg" alt></p><blockquote><p>有的人产生想法的频率很快，Inbox很快就塞满了，因此这些人可能需要早中晚分别整理一次。对于我来说，每天中午整理一次也许就够了。在空闲的时间没事就拿出手机整理当前的想法也是一种很好的方式。</p></blockquote><h1 id="下一步怎么做？"><a href="#下一步怎么做？" class="headerlink" title="下一步怎么做？"></a>下一步怎么做？</h1><p>制定了事件的 <strong>下一步动作</strong> 以后，我们需要进一步考虑这个动作是属于以下哪个方面的：</p><blockquote><ul><li><strong>Do it!</strong> - 如果这个动作小于两分钟而且现在能够完成的话，不需任何标记，<strong>立刻就去做！</strong></li><li><strong>Delayed</strong> - 如果这个动作要到特定某个日期才能完成，这就是 <strong>滞后(Delayed)</strong> 状态。</li><li><strong>Await</strong> - 如果这个动作需要委托他人完成，那么就是 <strong>等待(Await/Waiting For)</strong> 状态。</li><li><strong>Next</strong> - 如果这个动作不属于上面的每一项，或者当前条件不允许立刻完成的，那么这个动作就要放入你的 <strong>下一步动作(Next Actions)</strong> 列表了。记录下来，在合适的时候完成它！</li></ul></blockquote><p>在2Do中，有一项非常实用的功能：<code>标签(Tags)</code>。通过标签我们就可以将每一个动作使用<code>next</code>，<code>await</code>以及<code>delayed</code>三个标签作为标记。如果你使用的是原始GTD®的做法，一次只记录一项内容，那么你可以很轻松地、直接对这项动作进行标记。如果你和我一样，是习惯于提前规划一切的选手，那么请记住，<strong>只对第一项动作进行标记</strong>。（已完成的任务请直接通过app标记<code>已完成</code>，这样的话就能够保证最上面的动作就是当前需要进行的<em>下一步动作</em>。）</p><p>经过几个月的使用，我给自己制定了一套比较合理的标记规则，目前使用上是比较舒服的：</p><blockquote><ul><li><code>next</code> - 意味着直接的下一步动作。永远记得需要对工作列表最上面的一项没有任何标记的内容标记上<code>next</code>。</li><li><code>await</code> - 当一项动作因为外部因素目前无法继续进展的，且不知道明确完成时间的（比如正在等待别人答复的事情），标记上<code>await</code>，并且在note的地方记录下不能完成的原因，使得在检查列表的时候能够快速记起这件事情为什么正在处于等待状态。</li><li><code>delayed</code> - 当一项动作因为自身的理由暂时搁置的（比如“需要等到出国前一天再开通国际漫游服务”等等），则需要标记上<code>delayed</code>，并且需要标记上截止时间（使得app能够在当天及时提醒你继续进行操作）。</li></ul></blockquote><p><img src="2do/blog4.jpg" alt></p><h1 id="动作列表"><a href="#动作列表" class="headerlink" title="动作列表"></a>动作列表</h1><p>有同学会说，标记了以后如何查看呢？在这里隆重介绍2Do最引以为傲的功能——<strong>智能列表(Smart List)</strong>。正如之前所提到的，智能列表实际上就是保存了筛选参数的筛选器。因此我们只需要<em>选出包含动作标记的任务</em>，便能立刻创造出各个标记专属的列表了。对于需要关注的 <strong>下一步动作</strong> 列表，我们可以建立一个筛选器，提取出所有标签为<code>next</code>的就好了：<br> <figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tags: next</span><br></pre></td></tr></table></figure><br><img src="2do/next.jpg" alt></p><p>可以看到，我们刚刚标记的<em>Finish the doc</em>动作也包含在其中了。同样地，<code>await</code>，<code>delayed</code>标签同样也可以使用这种方式创立属于不同状态的专属列表：<br> <figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tags: await</span><br><span class="line">tags: delayed</span><br></pre></td></tr></table></figure><br><img src="2do/await.jpg" alt><br><img src="2do/delayed.jpg" alt></p><h1 id="检查内容"><a href="#检查内容" class="headerlink" title="检查内容"></a>检查内容</h1><p>添加内容固然很重要，但即时检查并且回顾工作进展也是非常重要的一项工作。需要约定一个固定时间定期对所有列表中的工作进行检查。检查有没有新的<em>下一步动作</em>没有进行标记的，或者哪一些<em>滞后</em>或者<em>等待</em>的内容现在可以继续进行下去的。对于我来说，每天熄灯睡觉在床上玩手机的时候就是一个最佳的回顾时间。</p><p>至此，GTD®所要求的所有标准都成功移植进2Do应用里了！简单吧，GTD®本身一点都不复杂。但使用上GTD®以后，给生活带来的便利确是巨大的。至少在使用了两三个月以后，尽管因为拖延症，当前需要同时进行的工作再多，脑子里也不会一直环绕着各种未完成事项的提醒了，处理事情的时候也能够心无旁骛了。至少，因为不会忘记处理任何滞后的事情，<strong>拖延症也不再有副作用了！！</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作为一个拖延症晚期的选手，经常视deadline为第一生产力，不到最后一分钟坚决不做事¯\_(ツ)_/¯。这使得在日常生活中，经常会将一骡子未完成的事情记在脑子中。再加上经常忘事的属性，久而久之就会将一些需要做的事情彻底遗忘在脑海中，不得不说深受其害。我曾经非常希望能够改掉忘记完成事情的这个坏毛病，理论上来说，遇到事情第一时间完成便是最好的了。但是，拖延症是改不了的。这辈子也改不了的。那么，如何改变这样的现状呢？正在挠头之际，GTD®出现了。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="reviews" scheme="http://kavel.cn/categories/reviews/"/>
    
    
      <category term="app" scheme="http://kavel.cn/tags/app/"/>
    
      <category term="GTD" scheme="http://kavel.cn/tags/GTD/"/>
    
  </entry>
  
  <entry>
    <title>Xcr3tChat: 一个比较安全的聊天工具</title>
    <link href="http://kavel.cn/zh-CN/xcr3tchat.html"/>
    <id>http://kavel.cn/zh-CN/xcr3tchat.html</id>
    <published>2018-08-02T19:44:57.000Z</published>
    <updated>2019-09-16T01:31:49.956Z</updated>
    
    <content type="html"><![CDATA[<p>最近准备换机器，在整理硬盘的时候翻出来了一套加密聊天系统的源代码，是大三的时候的大作业。这套系统使用一次性密钥对来进行端对端的聊天加密，希望能给大家在加密传输方面带来一些新的思路。完整代码在这里：<a href="https://github.com/KavelCortex/Xcr3TChat-server" target="_blank" rel="noopener">https://github.com/KavelCortex/Xcr3TChat-server</a></p><a id="more"></a>  <p><img src="xcr3tchat/splash.png" alt></p><h2 id="Xcr3tChat的特点"><a href="#Xcr3tChat的特点" class="headerlink" title="Xcr3tChat的特点"></a>Xcr3tChat的特点</h2><h3 id="全程RSA加密"><a href="#全程RSA加密" class="headerlink" title="全程RSA加密"></a>全程RSA加密</h3><p>无论是对服务器进行身份校验，还是端对端进行聊天，所有内容都将使用非对称加密方式进行加密后传输。就算被中间人攻击，获取到的不过是一串184个字符的BASE64编码，在没有获取到接收端私钥的情况下根本无从破译。</p><p>对于发送聊天信息的客户端，每次发送消息前将向对方发送一个握手包请求对方发送公钥。将聊天内容使用公钥加密后直接传送至对方客户端。而接收端在每次收到握手请求后将生成一组新的密钥对。密钥对使用一次后将被销毁，即使有一条截获的消息被破解，那么对于其他消息还能保持加密。</p><h3 id="端对端通信"><a href="#端对端通信" class="headerlink" title="端对端通信"></a>端对端通信</h3><p>客户端对于服务器的通信也是使用RSA加密的方式进行。服务器使用的是固定密钥对，所以整套系统安全性的突破口在于服务器密钥的保管。由于服务器端是整套系统安全性最低的部分，所以服务器承担的工作是最不敏感的，仅为验证身份信息以及承担寻呼的任务，除此以外完全不干涉客户端之间的通信。</p><p><img src="xcr3tchat/protocol.png" alt="protocol"></p><h2 id="项目功能概述"><a href="#项目功能概述" class="headerlink" title="项目功能概述"></a>项目功能概述</h2><ul><li>全程加密通讯</li><li>服务器通信相关操作（如注册用户、登入登出操作等）</li><li>客户端通信相关操作（如聊天、交换公钥等）</li><li>用于跨平台通信的通信协议</li><li>用于快速开发的客户端适配器</li></ul><h2 id="实现方法"><a href="#实现方法" class="headerlink" title="实现方法"></a>实现方法</h2><h3 id="全程加密通讯"><a href="#全程加密通讯" class="headerlink" title="全程加密通讯"></a>全程加密通讯</h3><p>客户端与服务器端在发送数据时都需要获取对方的公钥，然后通过加密类<code>CyptorUtil</code>进行加密操作再进行发送。</p><p>发送方处理流程</p><blockquote><p>原始数据-&gt;RSA加密-&gt;BASE64编码-&gt;发送</p></blockquote><p>接收端处理流程</p><blockquote><p>接收-&gt;BASE64解码-&gt;RSA 解密-&gt;原始数据</p></blockquote><h4 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="加密工具类-CryptorUtil-java"><a href="#加密工具类-CryptorUtil-java" class="headerlink" title="加密工具类 CryptorUtil.java"></a>加密工具类 CryptorUtil.java</h5><figure class="highlight java hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CryptorUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title">getSaltedMD5</span><span class="hljs-params">(String src, <span class="hljs-keyword">byte</span> salt)</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">try</span> &#123;</span><br><span class="line">            MessageDigest md = MessageDigest.getInstance(<span class="hljs-string">"MD5"</span>);</span><br><span class="line">            md.update(src.getBytes());</span><br><span class="line">            <span class="hljs-keyword">byte</span>[] md5 = md.digest();</span><br><span class="line">            md5[<span class="hljs-number">0</span>] = salt;</span><br><span class="line"></span><br><span class="line">            <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> BigInteger(<span class="hljs-number">1</span>, md5).toString(<span class="hljs-number">16</span>);</span><br><span class="line">        &#125; <span class="hljs-keyword">catch</span> (NoSuchAlgorithmException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title">getRandomSaltedMD5</span><span class="hljs-params">(String src)</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">byte</span> salt = (<span class="hljs-keyword">byte</span>) Math.abs(<span class="hljs-keyword">new</span> SecureRandom().nextInt(<span class="hljs-number">256</span>));</span><br><span class="line">        src += salt;</span><br><span class="line">        <span class="hljs-keyword">return</span> getSaltedMD5(src, salt);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">equalsSaltedMD5</span><span class="hljs-params">(String src, String md5)</span> </span>&#123;</span><br><span class="line">        <span class="hljs-comment">//byte salt = md5.getBytes()[0];</span></span><br><span class="line">        String saltHex = md5.substring(<span class="hljs-number">0</span>, <span class="hljs-number">2</span>);</span><br><span class="line">        <span class="hljs-keyword">byte</span> salt = (<span class="hljs-keyword">byte</span>) Integer.parseInt(saltHex, <span class="hljs-number">16</span>);</span><br><span class="line">        String srcMD5 = getSaltedMD5(src + salt, salt);</span><br><span class="line">        <span class="hljs-keyword">return</span> srcMD5.equals(md5);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title">encryptBASE64</span><span class="hljs-params">(<span class="hljs-keyword">byte</span>[] data)</span> <span class="hljs-keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> BASE64Encoder()).encodeBuffer(data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">byte</span>[] decryptBASE64(String data) <span class="hljs-keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> BASE64Decoder()).decodeBuffer(data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title">pack</span><span class="hljs-params">(String BASE64PubKey, String rawData)</span> <span class="hljs-keyword">throws</span></span></span><br><span class="line"><span class="hljs-function">            IOException </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">byte</span>[] encryptedData = cryptData(BASE64PubKey, rawData.getBytes(),</span><br><span class="line">                Cipher.ENCRYPT_MODE);</span><br><span class="line">        <span class="hljs-keyword">return</span> encryptBASE64(encryptedData);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title">unpack</span><span class="hljs-params">(String BASE64PriKey, String BASE64Data)</span></span></span><br><span class="line"><span class="hljs-function">            <span class="hljs-keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">byte</span>[] data = decryptBASE64(BASE64Data);</span><br><span class="line">        <span class="hljs-keyword">byte</span>[] decryptedData = cryptData(BASE64PriKey, data, Cipher</span><br><span class="line">                .DECRYPT_MODE);</span><br><span class="line">        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> String(decryptedData, <span class="hljs-string">"UTF-8"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">byte</span>[] cryptData(String BASE64Key, <span class="hljs-keyword">byte</span>[] data, <span class="hljs-keyword">int</span></span><br><span class="line">            cryptMode) &#123;</span><br><span class="line">        <span class="hljs-keyword">try</span> &#123;</span><br><span class="line">            KeyFactory keyFactory = KeyFactory.getInstance(<span class="hljs-string">"RSA"</span>);</span><br><span class="line">            KeySpec keySpec;</span><br><span class="line">            Key key;</span><br><span class="line">            <span class="hljs-keyword">switch</span> (cryptMode) &#123;</span><br><span class="line">                <span class="hljs-keyword">case</span> Cipher.ENCRYPT_MODE:</span><br><span class="line">                    keySpec = <span class="hljs-keyword">new</span> X509EncodedKeySpec(decryptBASE64(BASE64Key));</span><br><span class="line">                    key = keyFactory.generatePublic(keySpec);</span><br><span class="line">                    <span class="hljs-keyword">break</span>;</span><br><span class="line">                <span class="hljs-keyword">case</span> Cipher.DECRYPT_MODE:</span><br><span class="line">                    keySpec = <span class="hljs-keyword">new</span> PKCS8EncodedKeySpec(decryptBASE64(BASE64Key));</span><br><span class="line">                    key = keyFactory.generatePrivate(keySpec);</span><br><span class="line">                    <span class="hljs-keyword">break</span>;</span><br><span class="line">                <span class="hljs-keyword">default</span>:</span><br><span class="line">                    <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            Cipher cipher = Cipher.getInstance(<span class="hljs-string">"RSA"</span>);</span><br><span class="line">            cipher.init(cryptMode, key);</span><br><span class="line">            <span class="hljs-keyword">return</span> cipher.doFinal(data);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"Crypt Failed"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="服务器通信相关操作"><a href="#服务器通信相关操作" class="headerlink" title="服务器通信相关操作"></a>服务器通信相关操作</h3><p>客户端开启一个<code>socket</code>连接至<code>ServerSocket</code>，通过自定义通信协议发送加密信息。服务器接收到信息后解密并解析指令，进行相应的操作并发送返回的加密信息给客户端。</p><h4 id="功能截图"><a href="#功能截图" class="headerlink" title="功能截图"></a>功能截图</h4><h5 id="注册用户"><a href="#注册用户" class="headerlink" title="注册用户"></a>注册用户</h5><p><img src="xcr3tchat/before_reg_user_db.png" alt="添加用户前数据库情况"></p><p><img src="xcr3tchat/before_reg_user_ui_1.png" alt="UI界面进行注册操作1"></p><p><img src="xcr3tchat/before_reg_user_ui_2.png" alt="UI界面进行注册操作2"></p><p><img src="xcr3tchat/after_reg_user_db.png" alt="添加用户后数据库情况"></p><h5 id="登录操作"><a href="#登录操作" class="headerlink" title="登录操作"></a>登录操作</h5><p><img src="xcr3tchat/log_ui_1.png" alt="命令行进行登录"></p><p><img src="xcr3tchat/log_ui_2.png" alt="登录成功提示"></p><h5 id="查找并连接用户"><a href="#查找并连接用户" class="headerlink" title="查找并连接用户"></a>查找并连接用户</h5><p><img src="xcr3tchat/offline_ui_1.png" alt="对方不在线"></p><p><img src="xcr3tchat/online_ui_1.png" alt="对方在线"></p><h5 id="登出操作"><a href="#登出操作" class="headerlink" title="登出操作"></a>登出操作</h5><p><img src="xcr3tchat/logout_ui_1.png" alt="命令行输入-o进行登出"></p><p><img src="xcr3tchat/logout_ui_2.png" alt="登出成功提示"></p><h4 id="代码实现-1"><a href="#代码实现-1" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="服务器端生成类Xcr3TServer-java"><a href="#服务器端生成类Xcr3TServer-java" class="headerlink" title="服务器端生成类Xcr3TServer.java"></a>服务器端生成类Xcr3TServer.java</h5><figure class="highlight java hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Xcr3TServer</span></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">private</span> <span class="hljs-keyword">int</span> mPort;</span><br><span class="line">    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">static</span> Connection dbConn;</span><br><span class="line">    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">static</span> String databaseURL=<span class="hljs-string">"jdbc:mariadb://example.com:3300/xcr3tdb?user=xcr3tserver&amp;password=**********"</span>;</span><br><span class="line">    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">static</span> String SERVER_PRIVATE_KEY =</span><br><span class="line">            <span class="hljs-string">"MIICdgIBADANBgkqhkiG9w0BAQEFAASCAmAwggJcAgEAAoGBAJQLwdmayTZ90cFhNq5y6qRI3YR5\n"</span> +</span><br><span class="line">            <span class="hljs-string">"4pSZyeqs8yD1FfGvdBpjzHCx4/rbl4xLvSt+BrP/QuYAd6ebqu8qRaUYTUzd2vpHA5NeU0BsRbRz\n"</span> +</span><br><span class="line">            <span class="hljs-string">"V+l8ypj113o83DmOfsnGMitVqSxw754NNGxGrU5f0sdb6qSzCO3ZGRIij19+9Mv3qfdJAgMBAAEC\n"</span> +</span><br><span class="line">            <span class="hljs-string">"gYAfC4QgDKxrJ+FHiwo7dM+tmbYSJLkV7lYARzpIy/xJDUDsk8b4TuV+4nOaMPu/VhMzxbCSqMBu\n"</span> +</span><br><span class="line">            <span class="hljs-string">"vl8O/i9SmpEC3pOHoa2fYX1OZwUWa89VuiumDMftwIFjnRIzhQf++7GKMcVzRVSSuHlcIG7AcG34\n"</span> +</span><br><span class="line">            <span class="hljs-string">"u5Gg8XtrI/vHOpornERZMQJBANIyT6h6lZzKiVy7DDuYowEU1A7LG3Ers7vt4W19VAdjGr+xO792\n"</span> +</span><br><span class="line">            <span class="hljs-string">"Svv+2DdaiDWPM1P4dG6d+Wmr6JLqw9kS/QUCQQC0Tmlc2WfgLrCI8pdclB+nXcSYs2UHILcHOtr8\n"</span> +</span><br><span class="line">            <span class="hljs-string">"c94SySw2XRTkJTbvqkvgjPHEYvvp8gu3Ls3/yXTUIeiOW0R1AkAhgoPQiDpx1JgxgGBi3+KcuYVV\n"</span> +</span><br><span class="line">            <span class="hljs-string">"Fmw5jo4I19OocOKEivgot0ifLWym3+n4aSZt43Z7XJCzUdwBTLa3NVYjtTNBAkA3M/6cN8/O2lyg\n"</span> +</span><br><span class="line">            <span class="hljs-string">"QS3IYW1jj5jea6ZVzVVcOE/NlSf7tm374vm/dAlizU/X2y82QlwAX2Po3MKjOqmzPQJ3e0f1AkEA\n"</span> +</span><br><span class="line">            <span class="hljs-string">"rQNV91xRhLOKQ3uSfzrAjSv3+mg5vQ3B4VG+hoNmoVmh9V/PJcP2pAv3Zx6yCZCjhv4RuWQSFDro\n"</span> +</span><br><span class="line">            <span class="hljs-string">"PEvmPCQgPQ=="</span>;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Xcr3TServer</span><span class="hljs-params">(<span class="hljs-keyword">int</span> port)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="hljs-string">"Initializing Xcr3TServer..."</span>);</span><br><span class="line">        mPort=port;</span><br><span class="line">        <span class="hljs-keyword">try</span> &#123;</span><br><span class="line">            dbConn = DriverManager.getConnection(Xcr3TServer.databaseURL);</span><br><span class="line">        &#125; <span class="hljs-keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">new</span> Thread(<span class="hljs-keyword">new</span> ServerSocketRunnable(mPort)).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="服务器操作类-SocketHandler-java"><a href="#服务器操作类-SocketHandler-java" class="headerlink" title="服务器操作类 SocketHandler.java"></a>服务器操作类 SocketHandler.java</h5><figure class="highlight java hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SocketHandler</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">Runnable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> ConcurrentHashMap&lt;UUID, Socket&gt; clientSocketList = <span class="hljs-keyword">new</span></span><br><span class="line">            ConcurrentHashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">private</span> UUID mUUID;</span><br><span class="line">    <span class="hljs-keyword">private</span> List&lt;Socket&gt; mSockets = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    SocketHandler(List&lt;Socket&gt; sockets) &#123;</span><br><span class="line">        mSockets = sockets;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Socket <span class="hljs-title">getClientSocket</span><span class="hljs-params">(UUID clientUUID)</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> clientSocketList.get(clientUUID);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getClientServingCount</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">if</span> (clientSocketList != <span class="hljs-keyword">null</span>)</span><br><span class="line">            <span class="hljs-keyword">return</span> clientSocketList.size();</span><br><span class="line">        <span class="hljs-keyword">else</span></span><br><span class="line">            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">getSocketCount</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> mSockets.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> UUID <span class="hljs-title">getUUID</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> mUUID;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-meta">@Override</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">run</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">for</span> (Socket socket : mSockets) &#123;</span><br><span class="line">            <span class="hljs-keyword">try</span> &#123;</span><br><span class="line">                <span class="hljs-keyword">try</span> &#123;</span><br><span class="line">                    mUUID = UUID.randomUUID();</span><br><span class="line">                    clientSocketList.put(mUUID, socket);</span><br><span class="line">                    System.out.println(<span class="hljs-string">"\nADD:"</span> + getUUID() + <span class="hljs-string">"/ "</span> +</span><br><span class="line">                            getClientServingCount() + <span class="hljs-string">" serving"</span>);</span><br><span class="line">                    BufferedReader bufferedReader = <span class="hljs-keyword">new</span> BufferedReader(<span class="hljs-keyword">new</span></span><br><span class="line">                            InputStreamReader(socket.getInputStream()));</span><br><span class="line">                    String line;</span><br><span class="line">                    StringBuilder identity = <span class="hljs-keyword">new</span> StringBuilder();</span><br><span class="line">                    <span class="hljs-comment">//Identity</span></span><br><span class="line">                    <span class="hljs-keyword">while</span> ((line = bufferedReader.readLine()) != <span class="hljs-keyword">null</span>) &#123;</span><br><span class="line">                        identity.append(line);</span><br><span class="line">                        identity.append(<span class="hljs-string">"\r\n"</span>);</span><br><span class="line">                        <span class="hljs-keyword">if</span> (line.isEmpty())</span><br><span class="line">                            <span class="hljs-keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    RequestParser requestParser;</span><br><span class="line">                    requestParser = <span class="hljs-keyword">new</span> RequestParser(identity.toString());</span><br><span class="line">                    <span class="hljs-keyword">boolean</span> doneFlag = <span class="hljs-keyword">false</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                    JSONObject clientJSON = requestParser.getJSON();</span><br><span class="line"></span><br><span class="line">                    <span class="hljs-keyword">if</span> (!doneFlag &amp;&amp; requestParser.isProtocolHeader</span><br><span class="line">                            (Xcr3TProtocol.REQUEST_ADD)) &#123;</span><br><span class="line">                        <span class="hljs-keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">                            System.out.println(clientJSON.toString());</span><br><span class="line">                            String uid = CryptorUtil.unpack(Xcr3TServer</span><br><span class="line">                                    .SERVER_PRIVATE_KEY, clientJSON.getString</span><br><span class="line">                                    (<span class="hljs-string">"uid"</span>));</span><br><span class="line">                            String pswMD5 = CryptorUtil.unpack(Xcr3TServer</span><br><span class="line">                                    .SERVER_PRIVATE_KEY, clientJSON.getString</span><br><span class="line">                                    (<span class="hljs-string">"identity"</span>));</span><br><span class="line">                            <span class="hljs-comment">//<span class="hljs-doctag">TODO:</span> 添加用户资料进数据库</span></span><br><span class="line">                            Statement statement = Xcr3TServer.dbConn</span><br><span class="line">                                    .createStatement();</span><br><span class="line">                            ResultSet rs = statement.executeQuery(<span class="hljs-string">"SELECT * "</span> +</span><br><span class="line">                                    <span class="hljs-string">"FROM ClientInfo WHERE `uid`='"</span> + uid +</span><br><span class="line">                                    <span class="hljs-string">"';"</span>);</span><br><span class="line">                            <span class="hljs-keyword">if</span> (rs.next())</span><br><span class="line">                                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"username is "</span> +</span><br><span class="line">                                        <span class="hljs-string">"already exist"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                            <span class="hljs-keyword">int</span> affected = statement.executeUpdate(<span class="hljs-string">"INSERT "</span> +</span><br><span class="line">                                    <span class="hljs-string">"INTO ClientInfo (uid,identity,status) "</span> +</span><br><span class="line">                                    <span class="hljs-string">"values('"</span> + uid + <span class="hljs-string">"','"</span> + pswMD5 + <span class="hljs-string">"',"</span> +</span><br><span class="line">                                    <span class="hljs-string">"'OFFLINE');"</span>);</span><br><span class="line">                            <span class="hljs-keyword">if</span> (affected == <span class="hljs-number">0</span>)</span><br><span class="line">                                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"Cannot add "</span> +</span><br><span class="line">                                        <span class="hljs-string">"user."</span>);</span><br><span class="line">                            rs = statement.executeQuery(<span class="hljs-string">"SELECT * FROM "</span> +</span><br><span class="line">                                    <span class="hljs-string">"ClientInfo WHERE `uid`='"</span> + uid + <span class="hljs-string">"' AND"</span> +</span><br><span class="line">                                    <span class="hljs-string">" `identity`='"</span> + pswMD5 + <span class="hljs-string">"';"</span>);</span><br><span class="line">                            <span class="hljs-keyword">if</span> (!rs.next())</span><br><span class="line">                                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"Cannot read "</span> +</span><br><span class="line">                                        <span class="hljs-string">"user."</span>);</span><br><span class="line"></span><br><span class="line">                            Response response = <span class="hljs-keyword">new</span> Response.Builder</span><br><span class="line">                                    (Xcr3TProtocol.RESPONSE_200_OK)</span><br><span class="line">                                    .setDestinationPublicKey(clientJSON</span><br><span class="line">                                            .getString(<span class="hljs-string">"publicKey"</span>))</span><br><span class="line">                                    .put(<span class="hljs-string">"status"</span>, <span class="hljs-string">"OK"</span>)</span><br><span class="line">                                    .put(<span class="hljs-string">"id"</span>, rs.getString(<span class="hljs-string">"id"</span>))</span><br><span class="line">                                    .put(<span class="hljs-string">"uid"</span>, rs.getString(<span class="hljs-string">"uid"</span>))</span><br><span class="line">                                    .build();</span><br><span class="line"></span><br><span class="line">                            doneFlag = sendResponse(socket, response);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                        &#125; <span class="hljs-keyword">catch</span> (JSONException e) &#123;</span><br><span class="line">                            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"JSON Error"</span>);</span><br><span class="line">                        &#125; <span class="hljs-keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"SQL Server "</span> +</span><br><span class="line">                                    <span class="hljs-string">"Unavailable"</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="hljs-keyword">if</span> (!doneFlag &amp;&amp; requestParser.isProtocolHeader</span><br><span class="line">                            (Xcr3TProtocol.REQUEST_HANDSHAKE)) &#123;</span><br><span class="line">                        <span class="hljs-keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">                            System.out.println(clientJSON.toString());</span><br><span class="line">                            String uid = CryptorUtil.unpack(Xcr3TServer</span><br><span class="line">                                    .SERVER_PRIVATE_KEY, clientJSON.getString</span><br><span class="line">                                    (<span class="hljs-string">"uid"</span>));</span><br><span class="line">                            String psw = CryptorUtil.unpack(Xcr3TServer</span><br><span class="line">                                    .SERVER_PRIVATE_KEY, clientJSON.getString</span><br><span class="line">                                    (<span class="hljs-string">"identity"</span>));</span><br><span class="line">                            String port = CryptorUtil.unpack(Xcr3TServer</span><br><span class="line">                                    .SERVER_PRIVATE_KEY, clientJSON.getString</span><br><span class="line">                                    (<span class="hljs-string">"port"</span>));</span><br><span class="line"></span><br><span class="line">                            <span class="hljs-comment">//<span class="hljs-doctag">TODO:</span> 查找数据库匹配身份并返回TOKEN</span></span><br><span class="line">                            Statement statement = Xcr3TServer.dbConn</span><br><span class="line">                                    .createStatement();</span><br><span class="line">                            String clientQueryStr = <span class="hljs-string">"WHERE `uid` = '"</span> + uid +</span><br><span class="line">                                    <span class="hljs-string">"'"</span>;</span><br><span class="line"></span><br><span class="line">                            ResultSet rs = statement.executeQuery(<span class="hljs-string">"SELECT * "</span> +</span><br><span class="line">                                    <span class="hljs-string">"FROM ClientInfo "</span> + clientQueryStr + <span class="hljs-string">";"</span>);</span><br><span class="line">                            <span class="hljs-keyword">if</span> (!rs.next())</span><br><span class="line">                                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"Unknown "</span> +</span><br><span class="line">                                        <span class="hljs-string">"identity"</span>);</span><br><span class="line"></span><br><span class="line">                            <span class="hljs-keyword">if</span> (rs.getString(<span class="hljs-string">"status"</span>).equals(<span class="hljs-string">"ONLINE"</span>))</span><br><span class="line">                                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"You have "</span> +</span><br><span class="line">                                        <span class="hljs-string">"logged in. If it isn't you, please "</span> +</span><br><span class="line">                                        <span class="hljs-string">"contact the server."</span>);</span><br><span class="line"></span><br><span class="line">                            String md5DB = rs.getString(<span class="hljs-string">"identity"</span>);</span><br><span class="line"></span><br><span class="line">                            <span class="hljs-keyword">if</span> (!CryptorUtil.equalsSaltedMD5(psw, md5DB))</span><br><span class="line">                                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"Unknown "</span> +</span><br><span class="line">                                        <span class="hljs-string">"identity"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                            statement.execute(<span class="hljs-string">"UPDATE ClientInfo SET "</span> +</span><br><span class="line">                                    <span class="hljs-string">"`status`='ONLINE', `token`= '"</span> + getUUID</span><br><span class="line">                                    () + <span class="hljs-string">"' "</span> +</span><br><span class="line">                                    <span class="hljs-string">", `location`= '"</span> + socket.getInetAddress</span><br><span class="line">                                    () + <span class="hljs-string">"', `port`= '"</span> + port + <span class="hljs-string">"' "</span> +</span><br><span class="line">                                    clientQueryStr + <span class="hljs-string">";"</span>);</span><br><span class="line"></span><br><span class="line">                            Response response = <span class="hljs-keyword">new</span> Response.Builder</span><br><span class="line">                                    (Xcr3TProtocol.RESPONSE_200_OK)</span><br><span class="line">                                    .setDestinationPublicKey(clientJSON</span><br><span class="line">                                            .getString(<span class="hljs-string">"publicKey"</span>))</span><br><span class="line">                                    .put(<span class="hljs-string">"status"</span>, <span class="hljs-string">"OK"</span>)</span><br><span class="line">                                    .put(<span class="hljs-string">"token"</span>, getUUID().toString())</span><br><span class="line">                                    .build();</span><br><span class="line"></span><br><span class="line">                            doneFlag = sendResponse(socket, response);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                        &#125; <span class="hljs-keyword">catch</span> (JSONException e) &#123;</span><br><span class="line">                            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"JSON Error"</span>);</span><br><span class="line">                        &#125; <span class="hljs-keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"SQL Error"</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="hljs-keyword">if</span> (!doneFlag &amp;&amp; requestParser.isProtocolHeader</span><br><span class="line">                            (Xcr3TProtocol.REQUEST_FIND)) &#123;</span><br><span class="line">                        <span class="hljs-keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">                            System.out.println(clientJSON.toString());</span><br><span class="line">                            String destUID = CryptorUtil.unpack(Xcr3TServer</span><br><span class="line">                                    .SERVER_PRIVATE_KEY, clientJSON.getString</span><br><span class="line">                                    (<span class="hljs-string">"destUID"</span>));</span><br><span class="line">                            String token = CryptorUtil.unpack(Xcr3TServer</span><br><span class="line">                                    .SERVER_PRIVATE_KEY, clientJSON.getString</span><br><span class="line">                                    (<span class="hljs-string">"token"</span>));</span><br><span class="line"></span><br><span class="line">                            <span class="hljs-comment">//<span class="hljs-doctag">TODO:</span> 服务器比较token</span></span><br><span class="line">                            Statement statement = Xcr3TServer.dbConn</span><br><span class="line">                                    .createStatement();</span><br><span class="line">                            ResultSet rs = statement.executeQuery(<span class="hljs-string">"SELECT "</span> +</span><br><span class="line">                                    <span class="hljs-string">"`uid` FROM ClientInfo WHERE `token`='"</span> +</span><br><span class="line">                                    token + <span class="hljs-string">"';"</span>);</span><br><span class="line">                            <span class="hljs-keyword">if</span> (!rs.next())</span><br><span class="line">                                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"Bad token"</span>);</span><br><span class="line">                            <span class="hljs-keyword">if</span> (rs.getString(<span class="hljs-string">"uid"</span>).equals(destUID))</span><br><span class="line">                                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"Please don't"</span> +</span><br><span class="line">                                        <span class="hljs-string">" find yourself :("</span>);</span><br><span class="line"></span><br><span class="line">                            rs = statement.executeQuery(<span class="hljs-string">"SELECT * FROM "</span> +</span><br><span class="line">                                    <span class="hljs-string">"ClientInfo WHERE `uid`='"</span> + destUID +</span><br><span class="line">                                    <span class="hljs-string">"';"</span>);</span><br><span class="line">                            <span class="hljs-keyword">if</span> (!rs.next())</span><br><span class="line">                                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"Invalid user"</span>);</span><br><span class="line"></span><br><span class="line">                            <span class="hljs-comment">//<span class="hljs-doctag">TODO:</span>服务器连接对方并获取ready值</span></span><br><span class="line">                            <span class="hljs-keyword">boolean</span> isReady;</span><br><span class="line">                            String status = rs.getString(<span class="hljs-string">"status"</span>);</span><br><span class="line">                            <span class="hljs-keyword">if</span> (isReady = status.equals(<span class="hljs-string">"ONLINE"</span>)) &#123;</span><br><span class="line">                                Response response = <span class="hljs-keyword">new</span> Response.Builder</span><br><span class="line">                                        (Xcr3TProtocol.RESPONSE_200_OK)</span><br><span class="line">                                        .setDestinationPublicKey(clientJSON</span><br><span class="line">                                                .getString(<span class="hljs-string">"publicKey"</span>))</span><br><span class="line">                                        .put(<span class="hljs-string">"status"</span>, <span class="hljs-string">"OK"</span>)</span><br><span class="line">                                        .put(<span class="hljs-string">"valid"</span>, <span class="hljs-string">"true"</span>)</span><br><span class="line">                                        .put(<span class="hljs-string">"ready"</span>, String.valueOf(isReady))</span><br><span class="line">                                        .put(<span class="hljs-string">"ip"</span>, rs.getString(<span class="hljs-string">"location"</span>)</span><br><span class="line">                                                .substring(<span class="hljs-number">1</span>))</span><br><span class="line">                                        .put(<span class="hljs-string">"port"</span>, rs.getString(<span class="hljs-string">"port"</span>))</span><br><span class="line">                                        .build();</span><br><span class="line">                                doneFlag = sendResponse(socket, response);</span><br><span class="line">                            &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="line">                                <span class="hljs-keyword">if</span> (status.equals(<span class="hljs-string">"OFFLINE"</span>))</span><br><span class="line">                                    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(destUID +</span><br><span class="line">                                            <span class="hljs-string">" is OFFLINE."</span>);</span><br><span class="line">                                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(destUID + <span class="hljs-string">"is"</span> +</span><br><span class="line">                                        <span class="hljs-string">" UNKNOWN."</span>);</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                        &#125; <span class="hljs-keyword">catch</span> (JSONException e) &#123;</span><br><span class="line">                            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"JSON Error"</span>);</span><br><span class="line">                        &#125; <span class="hljs-keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"SQL Error"</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="hljs-keyword">if</span> (!doneFlag &amp;&amp; requestParser.isProtocolHeader</span><br><span class="line">                            (Xcr3TProtocol.REQUEST_GOODBYE)) &#123;</span><br><span class="line">                        <span class="hljs-keyword">try</span> &#123;</span><br><span class="line">                            System.out.println(clientJSON.toString());</span><br><span class="line">                            String uid = CryptorUtil.unpack(Xcr3TServer</span><br><span class="line">                                    .SERVER_PRIVATE_KEY, clientJSON.getString</span><br><span class="line">                                    (<span class="hljs-string">"uid"</span>));</span><br><span class="line">                            String token = CryptorUtil.unpack(Xcr3TServer</span><br><span class="line">                                    .SERVER_PRIVATE_KEY, clientJSON.getString</span><br><span class="line">                                    (<span class="hljs-string">"token"</span>));</span><br><span class="line">                            String clientQueryStr = <span class="hljs-string">"WHERE `uid` = '"</span> + uid +</span><br><span class="line">                                    <span class="hljs-string">"' AND `token`='"</span> + token + <span class="hljs-string">"'"</span>;</span><br><span class="line">                            <span class="hljs-comment">//<span class="hljs-doctag">TODO:</span> 更改服务器上的用户状态</span></span><br><span class="line">                            Statement statement = Xcr3TServer.dbConn</span><br><span class="line">                                    .createStatement();</span><br><span class="line">                            statement.execute(<span class="hljs-string">"UPDATE ClientInfo SET "</span> +</span><br><span class="line">                                    <span class="hljs-string">"`location`= null, `port`= null, "</span> +</span><br><span class="line">                                    <span class="hljs-string">"`status`='OFFLINE', `token`= '' "</span> +</span><br><span class="line">                                    clientQueryStr + <span class="hljs-string">";"</span>);</span><br><span class="line"></span><br><span class="line">                            Response response = <span class="hljs-keyword">new</span> Response.Builder</span><br><span class="line">                                    (Xcr3TProtocol.RESPONSE_200_OK)</span><br><span class="line">                                    .setDestinationPublicKey(clientJSON</span><br><span class="line">                                            .getString(<span class="hljs-string">"publicKey"</span>))</span><br><span class="line">                                    .put(<span class="hljs-string">"status"</span>, <span class="hljs-string">"OK"</span>)</span><br><span class="line">                                    .put(<span class="hljs-string">"goodbye"</span>, <span class="hljs-string">"true"</span>)</span><br><span class="line">                                    .build();</span><br><span class="line"></span><br><span class="line">                            doneFlag = sendResponse(socket, response);</span><br><span class="line"></span><br><span class="line">                        &#125; <span class="hljs-keyword">catch</span> (JSONException e) &#123;</span><br><span class="line">                            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"JSON Error"</span>);</span><br><span class="line">                        &#125; <span class="hljs-keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"SQL Error"</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="hljs-keyword">if</span> (!doneFlag) &#123;</span><br><span class="line">                        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"Unsupported Function"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    bufferedReader.close();</span><br><span class="line">                    closeSocket(socket);</span><br><span class="line"></span><br><span class="line">                &#125; <span class="hljs-keyword">catch</span> (IllegalStateException e) &#123;</span><br><span class="line">                    String err = <span class="hljs-string">"Received a bad/empty request: "</span> + e</span><br><span class="line">                            .getMessage();</span><br><span class="line">                    Response response = <span class="hljs-keyword">new</span> Response.Builder(Xcr3TProtocol</span><br><span class="line">                            .RESPONSE_400_BAD_REQUEST)</span><br><span class="line">                            .put(<span class="hljs-string">"status"</span>, <span class="hljs-string">"error"</span>)</span><br><span class="line">                            .put(<span class="hljs-string">"error"</span>, e.getMessage())</span><br><span class="line">                            .build();</span><br><span class="line"></span><br><span class="line">                    sendResponse(socket, response);</span><br><span class="line">                    System.out.println(err);</span><br><span class="line">                    closeSocket(socket);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">sendResponse</span><span class="hljs-params">(Socket socket, Response response)</span> <span class="hljs-keyword">throws</span></span></span><br><span class="line"><span class="hljs-function">            IOException </span>&#123;</span><br><span class="line">        BufferedWriter bufferedWriter = <span class="hljs-keyword">new</span> BufferedWriter(<span class="hljs-keyword">new</span></span><br><span class="line">                OutputStreamWriter(socket.getOutputStream()));</span><br><span class="line">        bufferedWriter.write(response.toString());</span><br><span class="line">        bufferedWriter.flush();</span><br><span class="line">        bufferedWriter.close();</span><br><span class="line">        <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">closeSocket</span><span class="hljs-params">(Socket socket)</span> <span class="hljs-keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        socket.close();</span><br><span class="line">        clientSocketList.remove(mUUID);</span><br><span class="line">        <span class="hljs-comment">//System.out.println("DEL:" + getUUID() + "/ " + getClientServingCount() + " left");</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="客户端通信相关操作"><a href="#客户端通信相关操作" class="headerlink" title="客户端通信相关操作"></a>客户端通信相关操作</h3><p>客户端在登录后将开启一个<code>SocketServer</code>，并提交该<code>SocketServer</code>的IP和端口号给服务器记录。当有其他客户端向服务器请求与该客户端进行通信时，服务器将返回该客户端的IP和端口号。其他客户端将直接对该地址创建一个<code>socket</code>进行连接。</p><h4 id="功能截图-1"><a href="#功能截图-1" class="headerlink" title="功能截图"></a>功能截图</h4><h5 id="连接用户"><a href="#连接用户" class="headerlink" title="连接用户"></a>连接用户</h5><p><img src="xcr3tchat/connect_ui.png" alt="控制台-c命令连接用户"></p><h5 id="开始聊天"><a href="#开始聊天" class="headerlink" title="开始聊天"></a>开始聊天</h5><p><img src="xcr3tchat/conv_ui.png" alt="开始聊天"></p><h5 id="关闭会话"><a href="#关闭会话" class="headerlink" title="关闭会话"></a>关闭会话</h5><p><img src="xcr3tchat/closeconv_ui_1.png" alt="控制台-d关闭会话"></p><p><img src="xcr3tchat/closeconv_ui_2.png" alt="提示对话已关闭"></p><h4 id="代码实现-2"><a href="#代码实现-2" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="客户端生成类-Xcr3TClient-java"><a href="#客户端生成类-Xcr3TClient-java" class="headerlink" title="客户端生成类 Xcr3TClient.java"></a>客户端生成类 Xcr3TClient.java</h5><figure class="highlight java hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Xcr3TClient</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String CLIENT_NAME = <span class="hljs-string">"Kavel's Xcr3Tchat Client/0.1"</span>;</span><br><span class="line">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">static</span> String SERVERNAME = <span class="hljs-string">"localhost"</span>;</span><br><span class="line">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> SERVERPORT = <span class="hljs-number">54213</span>;</span><br><span class="line">    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">static</span> String SERVER_PUBLIC_KEY =</span><br><span class="line">            <span class="hljs-string">"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCUC8HZmsk2fdHBYTaucuqkSN2EeeKUmcnqrPMg\n"</span> +</span><br><span class="line">                    <span class="hljs-string">"9RXxr3QaY8xwseP625eMS70rfgaz/0LmAHenm6rvKkWlGE1M3dr6RwOTXlNAbEW0c1fpfMqY9dd6\n"</span> +</span><br><span class="line">                    <span class="hljs-string">"PNw5jn7JxjIrVakscO+eDTRsRq1OX9LHW"</span> +</span><br><span class="line">                    <span class="hljs-string">"+qkswjt2RkSIo9ffvTL96n3SQIDAQAB"</span>;</span><br><span class="line">    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">static</span> KeyPairGenerator mKeyPairGenerator;</span><br><span class="line">    <span class="hljs-keyword">private</span> String mUID;</span><br><span class="line">    <span class="hljs-keyword">private</span> String mPassword;</span><br><span class="line">    <span class="hljs-keyword">private</span> ServerSocket mServerSocket;</span><br><span class="line">    <span class="hljs-keyword">private</span> Chattable mChatter;</span><br><span class="line">    <span class="hljs-keyword">private</span> ChatHandler mChatHandler;</span><br><span class="line">    <span class="hljs-keyword">private</span> <span class="hljs-keyword">int</span> mPort;</span><br><span class="line">    <span class="hljs-keyword">private</span> String mPrivateKey; <span class="hljs-comment">//己方PrK</span></span><br><span class="line">    <span class="hljs-keyword">private</span> String mToken = <span class="hljs-string">""</span>;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Xcr3TClient</span><span class="hljs-params">(String uid, String psw, Chattable chatter)</span> </span>&#123;</span><br><span class="line">        mUID = uid;</span><br><span class="line">        mPassword = psw;</span><br><span class="line">        mChatter = chatter;</span><br><span class="line">        <span class="hljs-keyword">try</span> &#123;</span><br><span class="line">            mKeyPairGenerator = KeyPairGenerator.getInstance(<span class="hljs-string">"RSA"</span>);</span><br><span class="line">            mKeyPairGenerator.initialize(<span class="hljs-number">1024</span>, <span class="hljs-keyword">new</span> SecureRandom());</span><br><span class="line">        &#125; <span class="hljs-keyword">catch</span> (NoSuchAlgorithmException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">send</span><span class="hljs-params">(Socket socket, Object request)</span> <span class="hljs-keyword">throws</span></span></span><br><span class="line"><span class="hljs-function">            IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(request.toString());</span><br><span class="line">        BufferedWriter bufferedWriter = <span class="hljs-keyword">new</span> BufferedWriter(<span class="hljs-keyword">new</span></span><br><span class="line">                OutputStreamWriter(socket.getOutputStream()));</span><br><span class="line">        bufferedWriter.write(request.toString());</span><br><span class="line">        bufferedWriter.flush();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">static</span> ResponseParser <span class="hljs-title">parse</span><span class="hljs-params">(Socket socket, String BASE64PriKey)</span></span></span><br><span class="line"><span class="hljs-function">            <span class="hljs-keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        BufferedReader bufferedReader = <span class="hljs-keyword">new</span> BufferedReader(<span class="hljs-keyword">new</span></span><br><span class="line">                InputStreamReader(socket.getInputStream()));</span><br><span class="line">        String line;</span><br><span class="line">        StringBuilder header = <span class="hljs-keyword">new</span> StringBuilder();</span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">while</span> ((line = bufferedReader.readLine()) != <span class="hljs-keyword">null</span>) &#123;</span><br><span class="line">            header.append(line);</span><br><span class="line">            header.append(<span class="hljs-string">"\r\n"</span>);</span><br><span class="line">            <span class="hljs-keyword">if</span> (line.isEmpty())</span><br><span class="line">                <span class="hljs-keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        StringBuilder msg = <span class="hljs-keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="hljs-keyword">while</span> ((line = bufferedReader.readLine()) != <span class="hljs-keyword">null</span>) &#123;</span><br><span class="line">            msg.append(line);</span><br><span class="line">            msg.append(<span class="hljs-string">"\r\n"</span>);</span><br><span class="line">            <span class="hljs-keyword">if</span> (line.isEmpty())</span><br><span class="line">                <span class="hljs-keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ResponseParser parser = <span class="hljs-keyword">new</span> ResponseParser(header.toString(), msg</span><br><span class="line">                .toString(), BASE64PriKey);</span><br><span class="line"></span><br><span class="line">        System.out.println(parser.getJSON().toString());</span><br><span class="line">        <span class="hljs-keyword">return</span> parser;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setChatter</span><span class="hljs-params">(Chattable chatter)</span> </span>&#123;</span><br><span class="line">        mChatter = chatter;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getUsername</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> mUID;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> ChatHandler <span class="hljs-title">getChatHandler</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> mChatHandler;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">private</span> String <span class="hljs-title">generatePublicKey</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        KeyPair keyPair = mKeyPairGenerator.generateKeyPair();</span><br><span class="line">        mPrivateKey = CryptorUtil.encryptBASE64(keyPair.getPrivate()</span><br><span class="line">                .getEncoded()); <span class="hljs-comment">//每次生成新KeyPair后将覆盖旧PrK</span></span><br><span class="line">        <span class="hljs-keyword">return</span> CryptorUtil.encryptBASE64(keyPair.getPublic().getEncoded());</span><br><span class="line">        <span class="hljs-comment">//己方PuK本地不保存，使用一次后交由GC处理</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment">/**</span></span><br><span class="line"><span class="hljs-comment">     * 添加当前用户</span></span><br><span class="line"><span class="hljs-comment">     *</span></span><br><span class="line"><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 服务器返回添加结果</span></span><br><span class="line"><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> IOException</span></span><br><span class="line"><span class="hljs-comment">     */</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">register</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        String pswMD5 = CryptorUtil.getRandomSaltedMD5(mPassword);</span><br><span class="line"></span><br><span class="line">        Request request = <span class="hljs-keyword">new</span> Request.Builder(Xcr3TProtocol.REQUEST_ADD)</span><br><span class="line">                .setDestinationPublicKey(SERVER_PUBLIC_KEY)</span><br><span class="line">                .put(<span class="hljs-string">"uid"</span>, mUID)</span><br><span class="line">                .put(<span class="hljs-string">"identity"</span>, pswMD5)</span><br><span class="line">                .putSelfPublicKey(generatePublicKey())</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        ResponseParser parser = sendToServerAndParse(request);</span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">if</span> (parser.isStatusOK()) &#123;</span><br><span class="line">            mChatter.printLog(<span class="hljs-string">"You have successfully registered as: "</span> +</span><br><span class="line">                    getUsername());</span><br><span class="line">            <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;</span><br><span class="line">        &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="line">            <span class="hljs-keyword">if</span> (parser.getJSON().has(<span class="hljs-string">"error"</span>))</span><br><span class="line">                mChatter.printLog(parser.getJSON().getString(<span class="hljs-string">"error"</span>));</span><br><span class="line">            <span class="hljs-keyword">return</span> <span class="hljs-keyword">false</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment">/**</span></span><br><span class="line"><span class="hljs-comment">     * 登录操作</span></span><br><span class="line"><span class="hljs-comment">     *</span></span><br><span class="line"><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 服务器返回握手结果</span></span><br><span class="line"><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> IOException</span></span><br><span class="line"><span class="hljs-comment">     */</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">login</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        mServerSocket = <span class="hljs-keyword">new</span> ServerSocket(<span class="hljs-number">0</span>);</span><br><span class="line">        mPort = mServerSocket.getLocalPort();</span><br><span class="line">        Request request = <span class="hljs-keyword">new</span> Request.Builder(Xcr3TProtocol.REQUEST_HANDSHAKE)</span><br><span class="line">                .setDestinationPublicKey(SERVER_PUBLIC_KEY)</span><br><span class="line">                .put(<span class="hljs-string">"uid"</span>, mUID)</span><br><span class="line">                .put(<span class="hljs-string">"identity"</span>, mPassword)</span><br><span class="line">                .put(<span class="hljs-string">"port"</span>, <span class="hljs-string">""</span> + mPort)</span><br><span class="line">                .putSelfPublicKey(generatePublicKey())</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        ResponseParser parser = sendToServerAndParse(request);</span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">if</span> (parser.isStatusOK()) &#123;</span><br><span class="line">            mToken = parser.getJSON().getString(<span class="hljs-string">"token"</span>);</span><br><span class="line">            <span class="hljs-keyword">new</span> Thread(<span class="hljs-keyword">new</span> ChatListener(mServerSocket, mChatter, getUsername</span><br><span class="line">                    ())).start();</span><br><span class="line">            mChatter.printLog(<span class="hljs-string">"You have logged in as: "</span> + getUsername());</span><br><span class="line">            <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;</span><br><span class="line">        &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="line">            <span class="hljs-keyword">if</span> (parser.getJSON().has(<span class="hljs-string">"error"</span>))</span><br><span class="line">                mChatter.printLog(parser.getJSON().getString(<span class="hljs-string">"error"</span>));</span><br><span class="line">            <span class="hljs-keyword">return</span> <span class="hljs-keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment">/**</span></span><br><span class="line"><span class="hljs-comment">     * 查询某用户在线状态，接通以后将使用Chattable.incoming()回调进行通知</span></span><br><span class="line"><span class="hljs-comment">     *</span></span><br><span class="line"><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> uid 要查询的用户ID</span></span><br><span class="line"><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 查询结果</span></span><br><span class="line"><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> IllegalStateException</span></span><br><span class="line"><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> IOException</span></span><br><span class="line"><span class="hljs-comment">     */</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">find</span><span class="hljs-params">(String uid)</span> <span class="hljs-keyword">throws</span> IllegalStateException, IOException </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">if</span> (mToken.isEmpty())</span><br><span class="line">            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"Please login first!"</span>);</span><br><span class="line"></span><br><span class="line">        Request request = <span class="hljs-keyword">new</span> Request.Builder(Xcr3TProtocol.REQUEST_FIND)</span><br><span class="line">                .setDestinationPublicKey(SERVER_PUBLIC_KEY)</span><br><span class="line">                .put(<span class="hljs-string">"destUID"</span>, uid)</span><br><span class="line">                .put(<span class="hljs-string">"token"</span>, mToken)</span><br><span class="line">                .putSelfPublicKey(generatePublicKey())</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        ResponseParser parser = sendToServerAndParse(request);</span><br><span class="line">        <span class="hljs-keyword">if</span> (parser.isStatusERROR())</span><br><span class="line">            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(parser.getJSON().getString</span><br><span class="line">                    (<span class="hljs-string">"error"</span>));</span><br><span class="line">        <span class="hljs-keyword">if</span> (parser.isStatusOK() &amp;&amp; parser.getJSON().getString(<span class="hljs-string">"ready"</span>).equals</span><br><span class="line">                (<span class="hljs-string">"true"</span>)) &#123;</span><br><span class="line">            String host = parser.getJSON().getString(<span class="hljs-string">"ip"</span>);</span><br><span class="line">            <span class="hljs-keyword">int</span> port = Integer.parseInt(parser.getJSON().getString(<span class="hljs-string">"port"</span>));</span><br><span class="line">            Socket s = <span class="hljs-keyword">new</span> Socket(host, port);</span><br><span class="line">            <span class="hljs-keyword">new</span> ChatHandler(s, mChatter, getUsername());</span><br><span class="line">            <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;</span><br><span class="line">        &#125; <span class="hljs-keyword">else</span></span><br><span class="line">            <span class="hljs-keyword">return</span> <span class="hljs-keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">logout</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Request request = <span class="hljs-keyword">new</span> Request.Builder(Xcr3TProtocol.REQUEST_GOODBYE)</span><br><span class="line">                .setDestinationPublicKey(SERVER_PUBLIC_KEY)</span><br><span class="line">                .put(<span class="hljs-string">"uid"</span>, mUID)</span><br><span class="line">                .put(<span class="hljs-string">"token"</span>, mToken)</span><br><span class="line">                .putSelfPublicKey(generatePublicKey())</span><br><span class="line">                .build();</span><br><span class="line">        ResponseParser parser = sendToServerAndParse(request);</span><br><span class="line">        <span class="hljs-keyword">if</span> (parser.isStatusOK()) &#123;</span><br><span class="line">            mToken = <span class="hljs-string">""</span>;</span><br><span class="line">            mServerSocket.close();</span><br><span class="line">            mPort = <span class="hljs-number">0</span>;</span><br><span class="line"></span><br><span class="line">            mChatter.printLog(<span class="hljs-string">"You ("</span> + getUsername() + <span class="hljs-string">") have logged out."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment">/**</span></span><br><span class="line"><span class="hljs-comment">     * 向服务器发送请求并返回结果</span></span><br><span class="line"><span class="hljs-comment">     *</span></span><br><span class="line"><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> request 经Request类包装后的请求对象</span></span><br><span class="line"><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 经ResponseParser类包装后的返回结果对象</span></span><br><span class="line"><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> IOException</span></span><br><span class="line"><span class="hljs-comment">     */</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">private</span> ResponseParser <span class="hljs-title">sendToServerAndParse</span><span class="hljs-params">(Request request)</span> <span class="hljs-keyword">throws</span></span></span><br><span class="line"><span class="hljs-function">            IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        Socket socket = <span class="hljs-keyword">new</span> Socket(SERVERNAME, SERVERPORT);</span><br><span class="line">        send(socket, request);</span><br><span class="line">        ResponseParser parser = parse(socket, mPrivateKey);</span><br><span class="line">        mPrivateKey = <span class="hljs-keyword">null</span>; <span class="hljs-comment">//使用一次后清除该私钥</span></span><br><span class="line">        socket.close();</span><br><span class="line">        <span class="hljs-keyword">return</span> parser;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="会话操作器-ChatHandler-java"><a href="#会话操作器-ChatHandler-java" class="headerlink" title="会话操作器 ChatHandler.java"></a>会话操作器 ChatHandler.java</h5><figure class="highlight java hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ChatHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">private</span> Socket mSocket;</span><br><span class="line">    <span class="hljs-keyword">private</span> Chattable mChatter;</span><br><span class="line">    <span class="hljs-keyword">private</span> Map&lt;String, String&gt; mPrivateKeyChain;</span><br><span class="line">    <span class="hljs-keyword">private</span> Map&lt;String, String&gt; mPublicKeyChain;</span><br><span class="line">    <span class="hljs-keyword">private</span> Stack&lt;String&gt; mKeyIDList;</span><br><span class="line">    <span class="hljs-keyword">private</span> String mSelfUsername;</span><br><span class="line">    <span class="hljs-keyword">private</span> String mOppositeUsername;</span><br><span class="line">    <span class="hljs-keyword">private</span> Object keyListLock = <span class="hljs-keyword">new</span> Object();</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">ChatHandler</span><span class="hljs-params">(Socket s, Chattable chatter, String selfUsername)</span></span></span><br><span class="line"><span class="hljs-function">            <span class="hljs-keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        mSelfUsername = selfUsername;</span><br><span class="line">        mSocket = s;</span><br><span class="line">        mChatter = chatter;</span><br><span class="line">        mPrivateKeyChain = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        mPublicKeyChain = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        mKeyIDList = <span class="hljs-keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">        <span class="hljs-keyword">new</span> Thread(<span class="hljs-keyword">new</span> CharReceiver()).start();</span><br><span class="line">        sendHandshakeMsg();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getSelfUsername</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> mSelfUsername;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getOppositeUsername</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> mOppositeUsername;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getLink</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> mSelfUsername + <span class="hljs-string">" -&gt; "</span> + mOppositeUsername;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">sendHandshakeMsg</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        String selfKeyID = UUID.randomUUID().toString();</span><br><span class="line">        String selfKey = generateSelfPublicKey(selfKeyID);</span><br><span class="line">        Request request = <span class="hljs-keyword">new</span> Request.Builder(Xcr3TProtocol.REQUEST_HANDSHAKE)</span><br><span class="line">                .put(<span class="hljs-string">"uid"</span>, mSelfUsername)</span><br><span class="line">                .putEncryptID(selfKeyID)</span><br><span class="line">                .putSelfPublicKey(selfKey)</span><br><span class="line">                .build();</span><br><span class="line">        Xcr3TClient.send(mSocket, request);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">sendChat</span><span class="hljs-params">(String chat)</span> <span class="hljs-keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="hljs-comment">//STEP1: Request key</span></span><br><span class="line">        Request keyRequest = <span class="hljs-keyword">new</span> Request.Builder(Xcr3TProtocol.REQUEST_GET_KEY)</span><br><span class="line">                .build();</span><br><span class="line">        Xcr3TClient.send(mSocket, keyRequest);</span><br><span class="line"></span><br><span class="line">        <span class="hljs-comment">//STEP2: Check keyList</span></span><br><span class="line">        <span class="hljs-keyword">synchronized</span> (keyListLock) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="hljs-keyword">while</span> (mKeyIDList.empty()) &#123;</span><br><span class="line">                <span class="hljs-keyword">try</span> &#123;</span><br><span class="line">                    keyListLock.wait();</span><br><span class="line">                &#125; <span class="hljs-keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-comment">//STEP3: Send message using receivedKey</span></span><br><span class="line">        String destKeyID = mKeyIDList.pop();</span><br><span class="line">        String destKey = mPublicKeyChain.remove(destKeyID);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Request request = <span class="hljs-keyword">new</span> Request.Builder(Xcr3TProtocol.REQUEST_CHAT)</span><br><span class="line">                .setDestinationPublicKey(destKey)</span><br><span class="line">                .put(<span class="hljs-string">"chat"</span>, chat)</span><br><span class="line">                .putDecryptID(destKeyID)</span><br><span class="line">                .build();</span><br><span class="line">        Xcr3TClient.send(mSocket, request);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">disconnect</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Request request = <span class="hljs-keyword">new</span> Request.Builder(Xcr3TProtocol.REQUEST_GOODBYE)</span><br><span class="line">                .build();</span><br><span class="line">        Xcr3TClient.send(mSocket, request);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">private</span> String <span class="hljs-title">generateSelfPublicKey</span><span class="hljs-params">(String keyID)</span> <span class="hljs-keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        KeyPair keyPair = Xcr3TClient.mKeyPairGenerator.generateKeyPair();</span><br><span class="line">        mPrivateKeyChain.put(keyID, CryptorUtil.encryptBASE64(keyPair</span><br><span class="line">                .getPrivate().getEncoded()));</span><br><span class="line">        <span class="hljs-keyword">return</span> CryptorUtil.encryptBASE64(keyPair.getPublic().getEncoded());</span><br><span class="line">        <span class="hljs-comment">//己方PuK本地不保存，使用一次后交由GC处理</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">private</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CharReceiver</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">Runnable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="hljs-meta">@Override</span></span><br><span class="line">        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">run</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">            <span class="hljs-keyword">try</span> &#123;</span><br><span class="line">                <span class="hljs-keyword">while</span> (mSocket.isConnected()) &#123;</span><br><span class="line">                    RequestParser parser = parseChat(mSocket);</span><br><span class="line">                    JSONObject chatJSON = parser.getJSON();</span><br><span class="line">                    <span class="hljs-comment">//System.out.println(parser.getProtocolHeader() + "\r\n"</span></span><br><span class="line">                    <span class="hljs-comment">// + chatJSON.toString());</span></span><br><span class="line"></span><br><span class="line">                    <span class="hljs-keyword">if</span> (!parser.isChat())</span><br><span class="line">                        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"It's not a chat"</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="hljs-keyword">if</span> (parser.isProtocolHeader(Xcr3TProtocol</span><br><span class="line">                            .REQUEST_GET_KEY)) &#123;</span><br><span class="line">                        String selfKeyID = UUID.randomUUID().toString();</span><br><span class="line">                        String selfKey = generateSelfPublicKey(selfKeyID);</span><br><span class="line">                        Response keyResponse = <span class="hljs-keyword">new</span> Response.Builder</span><br><span class="line">                                (Xcr3TProtocol.RESPONSE_200_OK)</span><br><span class="line">                                .setResponseName(Xcr3TClient.CLIENT_NAME)</span><br><span class="line">                                .put(<span class="hljs-string">"encryptID"</span>, selfKeyID)</span><br><span class="line">                                .put(<span class="hljs-string">"publicKey"</span>, selfKey)</span><br><span class="line">                                .build();</span><br><span class="line">                        Xcr3TClient.send(mSocket, keyResponse);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="hljs-keyword">if</span> (parser.isProtocolHeader(Xcr3TProtocol.REQUEST_CHAT)) &#123;</span><br><span class="line">                        String decryptID = chatJSON.getString(<span class="hljs-string">"decryptID"</span>);</span><br><span class="line">                        String decryptKey = mPrivateKeyChain.remove(decryptID);</span><br><span class="line">                        String chatText = CryptorUtil.unpack(decryptKey,</span><br><span class="line">                                chatJSON.getString(<span class="hljs-string">"chat"</span>));</span><br><span class="line">                        <span class="hljs-comment">//<span class="hljs-doctag">TODO:</span> 输出内容</span></span><br><span class="line">                        mChatter.showChat(getSelfUsername() + <span class="hljs-string">" &lt;- "</span> +</span><br><span class="line">                                getOppositeUsername() + <span class="hljs-string">": "</span> + chatText);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="hljs-keyword">if</span> (parser.isProtocolHeader(Xcr3TProtocol</span><br><span class="line">                            .RESPONSE_200_OK) &amp;&amp; chatJSON.has(<span class="hljs-string">"publicKey"</span>)) &#123;</span><br><span class="line">                        String destKey = chatJSON.getString(<span class="hljs-string">"publicKey"</span>);</span><br><span class="line">                        String destKeyID = chatJSON.getString(<span class="hljs-string">"encryptID"</span>);</span><br><span class="line">                        <span class="hljs-keyword">synchronized</span> (keyListLock) &#123;</span><br><span class="line">                            mKeyIDList.push(destKeyID);</span><br><span class="line">                            mPublicKeyChain.put(destKeyID, destKey);</span><br><span class="line">                            keyListLock.notify();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="hljs-keyword">if</span> (parser.isProtocolHeader(Xcr3TProtocol</span><br><span class="line">                            .REQUEST_HANDSHAKE)) &#123;</span><br><span class="line">                        mOppositeUsername = chatJSON.getString(<span class="hljs-string">"uid"</span>);</span><br><span class="line">                        mChatter.incoming(ChatHandler.<span class="hljs-keyword">this</span>);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="hljs-keyword">if</span> (parser.isProtocolHeader(Xcr3TProtocol</span><br><span class="line">                            .REQUEST_GOODBYE)) &#123;</span><br><span class="line">                        Response keyResponse = <span class="hljs-keyword">new</span> Response.Builder</span><br><span class="line">                                (Xcr3TProtocol.RESPONSE_200_OK)</span><br><span class="line">                                .setResponseName(Xcr3TClient.CLIENT_NAME)</span><br><span class="line">                                .put(<span class="hljs-string">"goodbye"</span>, <span class="hljs-string">"true"</span>)</span><br><span class="line">                                .build();</span><br><span class="line">                        Xcr3TClient.send(mSocket, keyResponse);</span><br><span class="line">                        mChatter.disconnecting(ChatHandler.<span class="hljs-keyword">this</span>);</span><br><span class="line">                        mSocket.close();</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="hljs-keyword">if</span> (parser.isProtocolHeader(Xcr3TProtocol</span><br><span class="line">                            .RESPONSE_200_OK) &amp;&amp; chatJSON.has(<span class="hljs-string">"goodbye"</span>)) &#123;</span><br><span class="line">                        <span class="hljs-keyword">if</span> (chatJSON.getString(<span class="hljs-string">"goodbye"</span>).equals(<span class="hljs-string">"true"</span>))</span><br><span class="line">                            mChatter.disconnecting(ChatHandler.<span class="hljs-keyword">this</span>);</span><br><span class="line">                        mSocket.close();</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                mChatter.printLog(<span class="hljs-string">"Connection Closed: "</span> + getLink());</span><br><span class="line">                mChatter.disconnecting(ChatHandler.<span class="hljs-keyword">this</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="hljs-function"><span class="hljs-keyword">private</span> RequestParser <span class="hljs-title">parseChat</span><span class="hljs-params">(Socket socket)</span> <span class="hljs-keyword">throws</span> IOException </span>&#123;</span><br><span class="line">            BufferedReader bufferedReader = <span class="hljs-keyword">new</span> BufferedReader(<span class="hljs-keyword">new</span></span><br><span class="line">                    InputStreamReader(socket.getInputStream()));</span><br><span class="line">            String line;</span><br><span class="line">            StringBuilder chatContent = <span class="hljs-keyword">new</span> StringBuilder();</span><br><span class="line">            <span class="hljs-keyword">while</span> ((line = bufferedReader.readLine()) != <span class="hljs-keyword">null</span>) &#123;</span><br><span class="line">                chatContent.append(line);</span><br><span class="line">                chatContent.append(<span class="hljs-string">"\r\n"</span>);</span><br><span class="line">                <span class="hljs-keyword">if</span> (line.isEmpty())</span><br><span class="line">                    <span class="hljs-keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="hljs-keyword">if</span> (chatContent.toString().startsWith(Xcr3TProtocol</span><br><span class="line">                    .RESPONSE_200_OK)) &#123;</span><br><span class="line">                <span class="hljs-keyword">while</span> ((line = bufferedReader.readLine()) != <span class="hljs-keyword">null</span>) &#123;</span><br><span class="line">                    chatContent.append(line);</span><br><span class="line">                    chatContent.append(<span class="hljs-string">"\r\n"</span>);</span><br><span class="line">                    <span class="hljs-keyword">if</span> (line.isEmpty())</span><br><span class="line">                        <span class="hljs-keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> RequestParser(chatContent.toString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="用于跨平台通信的通信协议"><a href="#用于跨平台通信的通信协议" class="headerlink" title="用于跨平台通信的通信协议"></a>用于跨平台通信的通信协议</h3><p>为了方便后续进行跨平台通信，制定了一套 RESTful API 作为通信规范。发送方使用<code>Request.Builder()</code>、<code>Response.Builder()</code>生成符合规范的请求头，使用<code>RequestParser</code>、<code>ResponseParser</code>解析符合规范的请求。</p><h4 id="API内容"><a href="#API内容" class="headerlink" title="API内容"></a>API内容</h4><table><thead><tr><th>用户操作</th><th>发送至</th><th>协议头</th><th>附加数据</th><th>对方返回数据</th></tr></thead><tbody><tr><td>注册用户</td><td>服务器</td><td><code>POST /register HTTP/1.1</code></td><td>{uid,identity,publicKey}</td><td>{status,uid,id}</td></tr><tr><td>登录</td><td>服务器</td><td><code>POST /handshake HTTP/1.1</code></td><td>{uid,identity,port,publicKey}</td><td>{status,token}</td></tr><tr><td>寻找用户</td><td>服务器</td><td><code>POST /find HTTP/1.1</code></td><td>{destUID,token}</td><td>{status,valid,ready,ip,port}</td></tr><tr><td>[聊天]握手</td><td>对方客户端</td><td><code>POST /handshake HTTP/1.1</code></td><td>{uid,encryptID,publicKey}</td><td>-</td></tr><tr><td>[聊天]获取公钥</td><td>对方客户端</td><td><code>GET /key HTTP/1.1</code></td><td>-</td><td>{encryptID,publicKey}</td></tr><tr><td>[聊天]发送信息</td><td>对方客户端</td><td><code>POST /chat HTTP/1.1</code></td><td>{chat,decryptID}</td><td>-</td></tr><tr><td>[聊天]关闭会话</td><td>对方客户端</td><td><code>POST /goodbye HTTP/1.1</code></td><td>-</td><td>-</td></tr><tr><td>登出</td><td>服务器</td><td><code>POST /goodbye HTTP/1.1</code></td><td>{uid,token,publicKey}</td><td>{status,goodbye}</td></tr></tbody></table><h4 id="代码实现-3"><a href="#代码实现-3" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="协议类-Xcr3TProtocol-java"><a href="#协议类-Xcr3TProtocol-java" class="headerlink" title="协议类 Xcr3TProtocol.java"></a>协议类 Xcr3TProtocol.java</h5><figure class="highlight java hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Xcr3TProtocol</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String REQUEST_ADD=<span class="hljs-string">"POST /register HTTP/1.1"</span>;</span><br><span class="line">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String REQUEST_HANDSHAKE =<span class="hljs-string">"POST /handshake HTTP/1.1"</span>;</span><br><span class="line">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String REQUEST_GET_KEY=<span class="hljs-string">"GET /key HTTP/1.1"</span>;</span><br><span class="line">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String REQUEST_FIND=<span class="hljs-string">"POST /find HTTP/1.1"</span>;</span><br><span class="line">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String REQUEST_GOODBYE =<span class="hljs-string">"POST /goodbye HTTP/1.1"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String REQUEST_CHAT=<span class="hljs-string">"POST /chat HTTP/1.1"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String RESPONSE_200_OK=<span class="hljs-string">"HTTP/1.1 200 OK"</span>;</span><br><span class="line">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String RESPONSE_400_BAD_REQUEST=<span class="hljs-string">"HTTP/1.1 400 Bad Request"</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="请求生成类-Request-java"><a href="#请求生成类-Request-java" class="headerlink" title="请求生成类 Request.java"></a>请求生成类 Request.java</h5><figure class="highlight java hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Request</span> </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">private</span> String mProtocolHeader;</span><br><span class="line">    <span class="hljs-keyword">private</span> JSONObject mJSON;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-title">Request</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-title">Request</span><span class="hljs-params">(Builder builder)</span> </span>&#123;</span><br><span class="line">        mProtocolHeader = builder.mProtocolHeader;</span><br><span class="line">        mJSON = builder.mJSON;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-meta">@Override</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">toString</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        StringBuilder request = <span class="hljs-keyword">new</span> StringBuilder();</span><br><span class="line">        request.append(mProtocolHeader);</span><br><span class="line">        request.append(<span class="hljs-string">"\r\n"</span>);</span><br><span class="line">        request.append(mJSON.length() &gt; <span class="hljs-number">0</span> ? mJSON.toString() : <span class="hljs-string">""</span>);</span><br><span class="line">        request.append(<span class="hljs-string">"\r\n\r\n"</span>);</span><br><span class="line">        <span class="hljs-keyword">return</span> request.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Builder</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">private</span> String mProtocolHeader;</span><br><span class="line">        <span class="hljs-keyword">private</span> String mDestPublicKey;</span><br><span class="line">        <span class="hljs-keyword">private</span> JSONObject mJSON;</span><br><span class="line">        <span class="hljs-keyword">private</span> <span class="hljs-keyword">boolean</span> needEncrypt;</span><br><span class="line"></span><br><span class="line">        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Builder</span><span class="hljs-params">(String protocolHeader)</span> </span>&#123;</span><br><span class="line">            mProtocolHeader = protocolHeader;</span><br><span class="line">            mJSON = <span class="hljs-keyword">new</span> JSONObject();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="hljs-function"><span class="hljs-keyword">public</span> Builder <span class="hljs-title">setDestinationPublicKey</span><span class="hljs-params">(String BASE64PubKey)</span> </span>&#123;</span><br><span class="line">            needEncrypt = <span class="hljs-keyword">true</span>;</span><br><span class="line">            mDestPublicKey = BASE64PubKey;</span><br><span class="line">            <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="hljs-function"><span class="hljs-keyword">public</span> Builder <span class="hljs-title">put</span><span class="hljs-params">(String key, String value)</span> <span class="hljs-keyword">throws</span> IOException </span>&#123;</span><br><span class="line">            String encryptedValue;</span><br><span class="line">            <span class="hljs-keyword">if</span> (needEncrypt)</span><br><span class="line">                encryptedValue = CryptorUtil.pack(mDestPublicKey, value);</span><br><span class="line">            <span class="hljs-keyword">else</span></span><br><span class="line">                encryptedValue = value;</span><br><span class="line">            mJSON.put(key, encryptedValue);</span><br><span class="line">            <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="hljs-function"><span class="hljs-keyword">public</span> Builder <span class="hljs-title">putEncryptID</span><span class="hljs-params">(String id)</span> </span>&#123;</span><br><span class="line">            mJSON.put(<span class="hljs-string">"encryptID"</span>, id);</span><br><span class="line">            <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="hljs-function"><span class="hljs-keyword">public</span> Builder <span class="hljs-title">putDecryptID</span><span class="hljs-params">(String id)</span> </span>&#123;</span><br><span class="line">            mJSON.put(<span class="hljs-string">"decryptID"</span>, id);</span><br><span class="line">            <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="hljs-function"><span class="hljs-keyword">public</span> Builder <span class="hljs-title">putSelfPublicKey</span><span class="hljs-params">(String BASE64PubKey)</span> </span>&#123;</span><br><span class="line">            mJSON.put(<span class="hljs-string">"publicKey"</span>, BASE64PubKey);</span><br><span class="line">            <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="hljs-function"><span class="hljs-keyword">public</span> Request <span class="hljs-title">build</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">            <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Request(<span class="hljs-keyword">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="回应生成类-Response-java"><a href="#回应生成类-Response-java" class="headerlink" title="回应生成类 Response.java"></a>回应生成类 Response.java</h5><figure class="highlight java hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Response</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String SERVER_NAME = <span class="hljs-string">"Kavel's Xcr3Tchat Server/0.1"</span>;</span><br><span class="line">    <span class="hljs-keyword">private</span> String mResponseName;</span><br><span class="line">    <span class="hljs-keyword">private</span> String mProtocolHeader;</span><br><span class="line">    <span class="hljs-keyword">private</span> <span class="hljs-keyword">int</span> mContentLength = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">private</span> JSONObject mJSON;</span><br><span class="line">    <span class="hljs-keyword">private</span> String mEncryptedResponse;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-title">Response</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-title">Response</span><span class="hljs-params">(Builder builder)</span> </span>&#123;</span><br><span class="line">        mResponseName = builder.mResponseName;</span><br><span class="line">        mProtocolHeader = builder.mProtocolHeader;</span><br><span class="line">        mEncryptedResponse = builder.mEncryptedResponse;</span><br><span class="line">        mContentLength = mEncryptedResponse.length();</span><br><span class="line">        mJSON = builder.mJSON;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getServerName</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> mResponseName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getProtocolHeader</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> mProtocolHeader;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> JSONObject <span class="hljs-title">getJSON</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> mJSON;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getContentLength</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> mContentLength;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-meta">@Override</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">toString</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        StringBuilder response = <span class="hljs-keyword">new</span> StringBuilder();</span><br><span class="line">        response.append(mProtocolHeader + <span class="hljs-string">"\r\n"</span>);</span><br><span class="line">        response.append(<span class="hljs-string">"Server: "</span> + mResponseName + <span class="hljs-string">"\r\n"</span>);</span><br><span class="line">        response.append(<span class="hljs-string">"Content-Length: "</span> + mContentLength + <span class="hljs-string">"\r\n"</span>);</span><br><span class="line">        response.append(<span class="hljs-string">"\r\n"</span>);</span><br><span class="line">        response.append(mEncryptedResponse);</span><br><span class="line">        response.append(<span class="hljs-string">"\r\n\r\n"</span>);</span><br><span class="line">        <span class="hljs-keyword">return</span> response.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Builder</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">private</span> String mResponseName;</span><br><span class="line">        <span class="hljs-keyword">private</span> String mProtocolHeader;</span><br><span class="line">        <span class="hljs-keyword">private</span> String mDestPublicKey;</span><br><span class="line">        <span class="hljs-keyword">private</span> JSONObject mJSON;</span><br><span class="line">        <span class="hljs-keyword">private</span> String mEncryptedResponse;</span><br><span class="line">        <span class="hljs-keyword">private</span> <span class="hljs-keyword">boolean</span> needEncrypt;</span><br><span class="line"></span><br><span class="line">        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Builder</span><span class="hljs-params">(String protocolHeader)</span> </span>&#123;</span><br><span class="line">            mProtocolHeader = protocolHeader;</span><br><span class="line">            mJSON = <span class="hljs-keyword">new</span> JSONObject();</span><br><span class="line">            mResponseName = SERVER_NAME;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="hljs-function"><span class="hljs-keyword">public</span> Builder <span class="hljs-title">setResponseName</span><span class="hljs-params">(String name)</span> </span>&#123;</span><br><span class="line">            mResponseName = name;</span><br><span class="line">            <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="hljs-function"><span class="hljs-keyword">public</span> Builder <span class="hljs-title">setDestinationPublicKey</span><span class="hljs-params">(String BASE64PubKey)</span> </span>&#123;</span><br><span class="line">            needEncrypt = <span class="hljs-keyword">true</span>;</span><br><span class="line">            mDestPublicKey = BASE64PubKey;</span><br><span class="line">            <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="hljs-function"><span class="hljs-keyword">public</span> Builder <span class="hljs-title">put</span><span class="hljs-params">(String key, String value)</span> <span class="hljs-keyword">throws</span> IOException </span>&#123;</span><br><span class="line">            mJSON.put(key, value);</span><br><span class="line">            <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="hljs-function"><span class="hljs-keyword">public</span> Response <span class="hljs-title">build</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException </span>&#123;</span><br><span class="line">            <span class="hljs-keyword">if</span> (needEncrypt)</span><br><span class="line">                mEncryptedResponse = CryptorUtil.pack(mDestPublicKey, mJSON</span><br><span class="line">                        .toString());</span><br><span class="line">            <span class="hljs-keyword">else</span></span><br><span class="line">                mEncryptedResponse = mJSON.toString();</span><br><span class="line">            <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Response(<span class="hljs-keyword">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="请求解析类-RequestParser-java"><a href="#请求解析类-RequestParser-java" class="headerlink" title="请求解析类 RequestParser.java"></a>请求解析类 RequestParser.java</h5><figure class="highlight java hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RequestParser</span> </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> String mRawRequest;</span><br><span class="line">    <span class="hljs-keyword">private</span> String mMethod;</span><br><span class="line">    <span class="hljs-keyword">private</span> String mProtocolHeader;</span><br><span class="line">    <span class="hljs-keyword">private</span> JSONObject mJSON;</span><br><span class="line">    <span class="hljs-keyword">private</span> HashMap&lt;String, String&gt; mQueryMap = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="hljs-keyword">private</span> <span class="hljs-keyword">boolean</span> isBadRequest;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">RequestParser</span><span class="hljs-params">(String rawRequest)</span> </span>&#123;</span><br><span class="line">        mRawRequest = rawRequest;</span><br><span class="line">        <span class="hljs-keyword">if</span> (mRawRequest.isEmpty()) &#123;</span><br><span class="line">            isBadRequest = <span class="hljs-keyword">true</span>;</span><br><span class="line">            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"Empty Request"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        parseRequest();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-title">RequestParser</span><span class="hljs-params">(String rawRequest, String method, String func)</span> </span>&#123;</span><br><span class="line">        mRawRequest = rawRequest;</span><br><span class="line">        mMethod = method;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getRawRequest</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> mRawRequest;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getRequestMethod</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> mMethod;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">isRequestMethod</span><span class="hljs-params">(String methodType)</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> mMethod.equals(methodType);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getProtocolHeader</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> mProtocolHeader;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">isProtocolHeader</span><span class="hljs-params">(String protocolHeader)</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> mProtocolHeader.startsWith(protocolHeader);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">isChat</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> isProtocolHeader(Xcr3TProtocol.REQUEST_CHAT)</span><br><span class="line">                || isProtocolHeader(Xcr3TProtocol.REQUEST_HANDSHAKE)</span><br><span class="line">                || isProtocolHeader(Xcr3TProtocol.REQUEST_GET_KEY)</span><br><span class="line">                || isProtocolHeader(Xcr3TProtocol.REQUEST_GOODBYE)</span><br><span class="line">                || isProtocolHeader(Xcr3TProtocol.RESPONSE_200_OK);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> JSONObject <span class="hljs-title">getJSON</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> mJSON;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> HashMap&lt;String, String&gt; <span class="hljs-title">getQueryMap</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> mQueryMap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getQueryValue</span><span class="hljs-params">(String key)</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> mQueryMap.get(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">isBadRequest</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> isBadRequest;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> RequestParser <span class="hljs-title">generateBadRequest</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> RequestParser(<span class="hljs-string">""</span>, <span class="hljs-string">""</span>, <span class="hljs-string">"/bad.request"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">parseRequest</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        mProtocolHeader = mRawRequest.substring(<span class="hljs-number">0</span>, mRawRequest.indexOf</span><br><span class="line">                (<span class="hljs-string">"\r\n"</span>)).trim();</span><br><span class="line">        mMethod = mProtocolHeader.substring(<span class="hljs-number">0</span>, mProtocolHeader.indexOf(<span class="hljs-string">"/"</span>))</span><br><span class="line">                .trim();</span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">try</span> &#123;</span><br><span class="line">            <span class="hljs-keyword">if</span> (mRawRequest.contains(<span class="hljs-string">"&#123;"</span>)) &#123;</span><br><span class="line">                String jsonRaw = mRawRequest.substring(mRawRequest.indexOf</span><br><span class="line">                        (<span class="hljs-string">"&#123;"</span>), mRawRequest.indexOf(<span class="hljs-string">"&#125;"</span>) + <span class="hljs-number">1</span>);</span><br><span class="line">                mJSON = <span class="hljs-keyword">new</span> JSONObject(jsonRaw);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"No JSON Found"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">fillQueryMap</span><span class="hljs-params">(String queryString)</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">for</span> (String querySet : queryString.split(<span class="hljs-string">"&amp;"</span>)) &#123;</span><br><span class="line">            String queryKey = querySet.split(<span class="hljs-string">"="</span>)[<span class="hljs-number">0</span>];</span><br><span class="line">            String queryValue = <span class="hljs-string">""</span>;</span><br><span class="line">            <span class="hljs-keyword">try</span> &#123;</span><br><span class="line">                queryValue = querySet.split(<span class="hljs-string">"="</span>)[<span class="hljs-number">1</span>];</span><br><span class="line">            &#125; <span class="hljs-keyword">catch</span> (ArrayIndexOutOfBoundsException e) &#123;</span><br><span class="line">                queryValue = <span class="hljs-string">""</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            mQueryMap.put(queryKey, queryValue);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="回应解析类-ResponseParser-java"><a href="#回应解析类-ResponseParser-java" class="headerlink" title="回应解析类 ResponseParser.java"></a>回应解析类 ResponseParser.java</h5><figure class="highlight java hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ResponseParser</span> </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">private</span> String mHeader;</span><br><span class="line">    <span class="hljs-keyword">private</span> String mMsg;</span><br><span class="line">    <span class="hljs-keyword">private</span> JSONObject mJSON;</span><br><span class="line">    <span class="hljs-keyword">private</span> String mBASE64PriKey;</span><br><span class="line">    <span class="hljs-keyword">private</span> <span class="hljs-keyword">boolean</span> isOK;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">ResponseParser</span><span class="hljs-params">(String header, String msg, String BASE64PriKey)</span> </span>&#123;</span><br><span class="line">        mHeader = header.split(<span class="hljs-string">"\n"</span>)[<span class="hljs-number">0</span>].trim();</span><br><span class="line">        mMsg = msg;</span><br><span class="line">        mBASE64PriKey = BASE64PriKey;</span><br><span class="line">        <span class="hljs-keyword">if</span> (mHeader.isEmpty())</span><br><span class="line">            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"Empty Response"</span>);</span><br><span class="line">        parseResponse();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> JSONObject <span class="hljs-title">getJSON</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> mJSON;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">isResponse</span><span class="hljs-params">(String protocolHeader)</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> mHeader.equals(protocolHeader);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">isResponseOK</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> isOK;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">isStatusOK</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> isOK &amp;&amp; mJSON.get(<span class="hljs-string">"status"</span>).equals(<span class="hljs-string">"OK"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">isStatusERROR</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> mJSON.has(<span class="hljs-string">"status"</span>) &amp;&amp; mJSON.get(<span class="hljs-string">"status"</span>).equals(<span class="hljs-string">"error"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">parseResponse</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        String decryptedMsg = <span class="hljs-string">""</span>;</span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">if</span> (mHeader.equals(Xcr3TProtocol.RESPONSE_200_OK)) &#123;</span><br><span class="line">            isOK = <span class="hljs-keyword">true</span>;</span><br><span class="line">            <span class="hljs-keyword">try</span> &#123;</span><br><span class="line">                <span class="hljs-keyword">byte</span>[] data = CryptorUtil.cryptData(mBASE64PriKey,</span><br><span class="line">                        CryptorUtil.decryptBASE64(mMsg), Cipher.DECRYPT_MODE);</span><br><span class="line">                decryptedMsg = <span class="hljs-keyword">new</span> String(data, <span class="hljs-string">"UTF-8"</span>);</span><br><span class="line">            &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (mHeader.equals(Xcr3TProtocol.RESPONSE_400_BAD_REQUEST)) &#123;</span><br><span class="line">            isOK = <span class="hljs-keyword">false</span>;</span><br><span class="line">            decryptedMsg = mMsg;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        mJSON = <span class="hljs-keyword">new</span> JSONObject(decryptedMsg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="用于快速开发的客户端适配器"><a href="#用于快速开发的客户端适配器" class="headerlink" title="用于快速开发的客户端适配器"></a>用于快速开发的客户端适配器</h3><p>为了能够进行客户端的快速开发，创建了一套Java API，通过调用相关方法即可快速开发出一个符合规范的Java客户端。</p><p>API分为三部分，分别是：</p><blockquote><ul><li><code>Chattable</code>接口：提供信息的回调方法。</li><li><code>Xcr3TClient</code>类：客户端主类，可调用其公有方法完成上述所有用户操作。</li><li><code>Xcr3TAdapter</code>类：客户端适配器类，支持多客户端、命令行操作，传入<code>Chattable</code>类后能够支持信息回显。</li></ul></blockquote><h4 id="代码实现-4"><a href="#代码实现-4" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="信息回调接口-Chattable-java"><a href="#信息回调接口-Chattable-java" class="headerlink" title="信息回调接口 Chattable.java"></a>信息回调接口 Chattable.java</h5><figure class="highlight java hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">Chattable</span> </span>&#123;</span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">incoming</span><span class="hljs-params">(ChatHandler handler)</span></span>;</span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">disconnecting</span><span class="hljs-params">(ChatHandler handler)</span></span>;</span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">showChat</span><span class="hljs-params">(String chat)</span></span>;</span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">printLog</span><span class="hljs-params">(String message)</span></span>;</span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">updateUI</span><span class="hljs-params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="客户端适配器类-Xcr3TAdapter-java"><a href="#客户端适配器类-Xcr3TAdapter-java" class="headerlink" title="客户端适配器类 Xcr3TAdapter.java"></a>客户端适配器类 Xcr3TAdapter.java</h5><figure class="highlight java hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Xcr3TAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    Chattable mChatter;</span><br><span class="line">    <span class="hljs-keyword">private</span> Xcr3TClient mCurrentIdentity;</span><br><span class="line">    <span class="hljs-keyword">private</span> ChatHandler mCurrentChatHandler;</span><br><span class="line">    <span class="hljs-keyword">private</span> Map&lt;String, Xcr3TClient&gt; mIdentityMap = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="hljs-keyword">private</span> Map&lt;String, Map&lt;String, ChatHandler&gt;&gt; mChatHandlerMap = <span class="hljs-keyword">new</span></span><br><span class="line">            HashMap&lt;&gt;();</span><br><span class="line">    <span class="hljs-keyword">private</span> Options mCliOptions;</span><br><span class="line">    <span class="hljs-keyword">private</span> HelpFormatter mHelpFormatter;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Xcr3TAdapter</span><span class="hljs-params">(Chattable chatter)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        mChatter = chatter;</span><br><span class="line">        initCli();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> Xcr3TClient <span class="hljs-title">getCurrentIdentity</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> mCurrentIdentity;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> ChatHandler <span class="hljs-title">getCurrentChatHandler</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> mCurrentChatHandler;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> Map&lt;String, Xcr3TClient&gt; <span class="hljs-title">getIdentityMap</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> mIdentityMap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> Map&lt;String, ChatHandler&gt; <span class="hljs-title">getChatHandlerMap</span><span class="hljs-params">(String identity)</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">if</span> (!mChatHandlerMap.containsKey(identity))</span><br><span class="line">            mChatHandlerMap.put(identity, <span class="hljs-keyword">new</span> HashMap&lt;&gt;());</span><br><span class="line">        <span class="hljs-keyword">return</span> mChatHandlerMap.get(identity);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">login</span><span class="hljs-params">(String uid, String psw)</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">if</span> (mIdentityMap.containsKey(uid))</span><br><span class="line">            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"already logged in."</span>);</span><br><span class="line">        addIdentity(uid, psw);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">logout</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">if</span> (mCurrentIdentity == <span class="hljs-keyword">null</span>)</span><br><span class="line">            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"please select an identity to log"</span> +</span><br><span class="line">                    <span class="hljs-string">" out."</span>);</span><br><span class="line">        logout(mCurrentIdentity.getUsername());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">logout</span><span class="hljs-params">(String identity)</span> <span class="hljs-keyword">throws</span> IllegalStateException </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">if</span> (!mIdentityMap.containsKey(identity))</span><br><span class="line">            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"Invalid identity"</span>);</span><br><span class="line">        Xcr3TClient client = mIdentityMap.get(identity);</span><br><span class="line">        <span class="hljs-keyword">try</span> &#123;</span><br><span class="line">            rmIdentity(client);</span><br><span class="line">        &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">register</span><span class="hljs-params">(String uid, String psw1, String psw2)</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">if</span> (!psw1.equals(psw2))</span><br><span class="line">            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"password must be the same."</span>);</span><br><span class="line">        Xcr3TClient client = <span class="hljs-keyword">new</span> Xcr3TClient(uid, psw2, mChatter);</span><br><span class="line">        <span class="hljs-keyword">try</span> &#123;</span><br><span class="line">            <span class="hljs-keyword">if</span> (client.register())</span><br><span class="line">                addIdentity(client);</span><br><span class="line">        &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"Couldn't connect to server."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">switchIdentity</span><span class="hljs-params">(String identity)</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">if</span> (mIdentityMap.containsKey(identity)) &#123;</span><br><span class="line">            setCurrentClient(identity);</span><br><span class="line">        &#125; <span class="hljs-keyword">else</span></span><br><span class="line">            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"Invalid Identity."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">connect</span><span class="hljs-params">(String uid)</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">try</span> &#123;</span><br><span class="line">            mCurrentIdentity.find(uid);</span><br><span class="line">        &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"Couldn't connect to server."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">disconnect</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">if</span> (mCurrentChatHandler == <span class="hljs-keyword">null</span>)</span><br><span class="line">            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"please select an contact to "</span> +</span><br><span class="line">                    <span class="hljs-string">"disconnect."</span>);</span><br><span class="line">        disconnect(mCurrentChatHandler.getLink());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">disconnect</span><span class="hljs-params">(String link)</span> </span>&#123;</span><br><span class="line">        String identity = link.split(<span class="hljs-string">"-&gt;"</span>)[<span class="hljs-number">0</span>].trim();</span><br><span class="line">        String contact = link.split(<span class="hljs-string">"-&gt;"</span>)[<span class="hljs-number">1</span>].trim();</span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">if</span> (!getIdentityMap().containsKey(identity)</span><br><span class="line">                || !getChatHandlerMap(identity).containsKey(contact))</span><br><span class="line">            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"Invalid link"</span>);</span><br><span class="line">        ChatHandler handler = getChatHandlerMap(identity).get(contact);</span><br><span class="line">        <span class="hljs-keyword">try</span> &#123;</span><br><span class="line">            handler.disconnect();</span><br><span class="line">        &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"Couldn't connect to server."</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">forward</span><span class="hljs-params">(String contact)</span> </span>&#123;</span><br><span class="line">        String identity = mCurrentIdentity.getUsername();</span><br><span class="line">        String link = identity + <span class="hljs-string">" -&gt; "</span> + contact;</span><br><span class="line">        <span class="hljs-keyword">if</span> (mChatHandlerMap.containsKey(identity) &amp;&amp; mChatHandlerMap.get</span><br><span class="line">                (identity).containsKey(contact)) &#123;</span><br><span class="line">            mCurrentChatHandler = mChatHandlerMap.get(identity).get(contact);</span><br><span class="line">            setCurrentHandler(link);</span><br><span class="line">        &#125; <span class="hljs-keyword">else</span></span><br><span class="line">            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"Invalid forward"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">cmd</span><span class="hljs-params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">try</span> &#123;</span><br><span class="line">            CommandLineParser parser = <span class="hljs-keyword">new</span> DefaultParser();</span><br><span class="line">            CommandLine line = parser.parse(mCliOptions, args);</span><br><span class="line"></span><br><span class="line">            <span class="hljs-keyword">if</span> (line.hasOption(<span class="hljs-string">"h"</span>)) &#123;</span><br><span class="line">                StringWriter sw = <span class="hljs-keyword">new</span> StringWriter();</span><br><span class="line">                mHelpFormatter.printHelp(<span class="hljs-keyword">new</span> PrintWriter(sw), <span class="hljs-number">100</span>, <span class="hljs-string">"[command]"</span> +</span><br><span class="line">                                <span class="hljs-string">" [message]"</span>,</span><br><span class="line">                        <span class="hljs-string">""</span>, mCliOptions, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-string">""</span>);</span><br><span class="line">                mChatter.printLog(sw.toString());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="hljs-keyword">if</span> (line.hasOption(<span class="hljs-string">"l"</span>)) &#123;</span><br><span class="line">                String uid = line.getOptionValues(<span class="hljs-string">"l"</span>)[<span class="hljs-number">0</span>];</span><br><span class="line">                String psw = line.getOptionValues(<span class="hljs-string">"l"</span>)[<span class="hljs-number">1</span>];</span><br><span class="line">                login(uid, psw);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="hljs-keyword">if</span> (line.hasOption(<span class="hljs-string">"o"</span>)) &#123;</span><br><span class="line">                String identity = line.getOptionValue(<span class="hljs-string">"o"</span>);</span><br><span class="line">                <span class="hljs-keyword">if</span> (identity == <span class="hljs-keyword">null</span>)</span><br><span class="line">                    logout();</span><br><span class="line">                <span class="hljs-keyword">else</span></span><br><span class="line">                    logout(identity);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="hljs-keyword">if</span> (line.hasOption(<span class="hljs-string">"r"</span>)) &#123;</span><br><span class="line">                String uid = line.getOptionValues(<span class="hljs-string">"r"</span>)[<span class="hljs-number">0</span>];</span><br><span class="line">                String psw1 = line.getOptionValues(<span class="hljs-string">"r"</span>)[<span class="hljs-number">1</span>];</span><br><span class="line">                String psw2 = line.getOptionValues(<span class="hljs-string">"r"</span>)[<span class="hljs-number">2</span>];</span><br><span class="line">                register(uid, psw1, psw2);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="hljs-keyword">if</span> (line.hasOption(<span class="hljs-string">"s"</span>)) &#123;</span><br><span class="line">                String identity = line.getOptionValue(<span class="hljs-string">"s"</span>);</span><br><span class="line">                switchIdentity(identity);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="hljs-keyword">if</span> (line.hasOption(<span class="hljs-string">"c"</span>)) &#123;</span><br><span class="line">                String uid = line.getOptionValue(<span class="hljs-string">"c"</span>);</span><br><span class="line">                connect(uid);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="hljs-keyword">if</span> (line.hasOption(<span class="hljs-string">"d"</span>)) &#123;</span><br><span class="line">                String link = line.getOptionValue(<span class="hljs-string">"d"</span>);</span><br><span class="line">                <span class="hljs-keyword">if</span> (link == <span class="hljs-keyword">null</span>)</span><br><span class="line">                    disconnect();</span><br><span class="line">                <span class="hljs-keyword">else</span></span><br><span class="line">                    disconnect(link);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="hljs-keyword">if</span> (line.hasOption(<span class="hljs-string">"f"</span>)) &#123;</span><br><span class="line">                String contact = line.getOptionValue(<span class="hljs-string">"f"</span>);</span><br><span class="line">                forward(contact);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            String chatText = String.join(<span class="hljs-string">" "</span>, line.getArgs());</span><br><span class="line"></span><br><span class="line">            <span class="hljs-keyword">if</span> (chatText.isEmpty()) &#123;</span><br><span class="line">                mChatter.updateUI();</span><br><span class="line">                <span class="hljs-keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="hljs-keyword">if</span> (mCurrentChatHandler == <span class="hljs-keyword">null</span>)</span><br><span class="line">                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"Oops! we don't know who to "</span> +</span><br><span class="line">                        <span class="hljs-string">"be sent to! Please select a contact!"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="hljs-keyword">if</span> (mCurrentIdentity == <span class="hljs-keyword">null</span>)</span><br><span class="line">                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"Hi stranger! Please log in "</span> +</span><br><span class="line">                        <span class="hljs-string">"or select your identity!"</span>);</span><br><span class="line"></span><br><span class="line">            mCurrentChatHandler.sendChat(chatText);</span><br><span class="line">            mChatter.showChat(mCurrentChatHandler.getSelfUsername() + <span class="hljs-string">" -&gt; "</span></span><br><span class="line">                    + mCurrentChatHandler.getOppositeUsername() + <span class="hljs-string">": "</span> +</span><br><span class="line">                    chatText);</span><br><span class="line">            mChatter.updateUI();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125; <span class="hljs-keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">            StringWriter sw = <span class="hljs-keyword">new</span> StringWriter();</span><br><span class="line">            mHelpFormatter.printHelp(<span class="hljs-keyword">new</span> PrintWriter(sw), <span class="hljs-number">100</span>, <span class="hljs-string">"[command] "</span> +</span><br><span class="line">                            <span class="hljs-string">"[message]"</span>,</span><br><span class="line">                    <span class="hljs-string">""</span>, mCliOptions, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-string">""</span>);</span><br><span class="line">            mChatter.printLog(sw.toString());</span><br><span class="line">        &#125; <span class="hljs-keyword">catch</span> (IllegalStateException e) &#123;</span><br><span class="line">            mChatter.printLog(e.getMessage());</span><br><span class="line">        &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">initCli</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        mHelpFormatter = <span class="hljs-keyword">new</span> HelpFormatter();</span><br><span class="line">        mCliOptions = <span class="hljs-keyword">new</span> Options();</span><br><span class="line">        mCliOptions.addOption(<span class="hljs-string">"h"</span>, <span class="hljs-string">"help"</span>, <span class="hljs-keyword">false</span>, <span class="hljs-string">"print help for the command"</span> +</span><br><span class="line">                <span class="hljs-string">"."</span>);</span><br><span class="line">        mCliOptions.addOption(</span><br><span class="line">                Option.builder(<span class="hljs-string">"l"</span>).longOpt(<span class="hljs-string">"login"</span>)</span><br><span class="line">                        .numberOfArgs(<span class="hljs-number">2</span>)</span><br><span class="line">                        .valueSeparator(<span class="hljs-string">' '</span>)</span><br><span class="line">                        .argName(<span class="hljs-string">"uid password"</span>)</span><br><span class="line">                        .desc(<span class="hljs-string">"login using uid and password"</span>)</span><br><span class="line">                        .build());</span><br><span class="line">        mCliOptions.addOption(</span><br><span class="line">                Option.builder(<span class="hljs-string">"o"</span>).longOpt(<span class="hljs-string">"logout"</span>)</span><br><span class="line">                        .hasArg()</span><br><span class="line">                        .optionalArg(<span class="hljs-keyword">true</span>)</span><br><span class="line">                        .argName(<span class="hljs-string">"identity"</span>)</span><br><span class="line">                        .desc(<span class="hljs-string">"logout current identity, or specified ideneity"</span>)</span><br><span class="line">                        .build());</span><br><span class="line">        mCliOptions.addOption(</span><br><span class="line">                Option.builder(<span class="hljs-string">"r"</span>).longOpt(<span class="hljs-string">"register"</span>)</span><br><span class="line">                        .numberOfArgs(<span class="hljs-number">3</span>)</span><br><span class="line">                        .argName(<span class="hljs-string">"uid password re-enter-password"</span>)</span><br><span class="line">                        .desc(<span class="hljs-string">"register using uid and password"</span>)</span><br><span class="line">                        .build());</span><br><span class="line">        mCliOptions.addOption(</span><br><span class="line">                Option.builder(<span class="hljs-string">"s"</span>).longOpt(<span class="hljs-string">"switch"</span>)</span><br><span class="line">                        .numberOfArgs(<span class="hljs-number">1</span>)</span><br><span class="line">                        .argName(<span class="hljs-string">"identity"</span>)</span><br><span class="line">                        .desc(<span class="hljs-string">"switch to available identity"</span>)</span><br><span class="line">                        .build());</span><br><span class="line">        mCliOptions.addOption(</span><br><span class="line">                Option.builder(<span class="hljs-string">"c"</span>).longOpt(<span class="hljs-string">"connect"</span>)</span><br><span class="line">                        .numberOfArgs(<span class="hljs-number">1</span>)</span><br><span class="line">                        .argName(<span class="hljs-string">"uid"</span>)</span><br><span class="line">                        .desc(<span class="hljs-string">"connect to a contact"</span>)</span><br><span class="line">                        .build());</span><br><span class="line">        mCliOptions.addOption(</span><br><span class="line">                Option.builder(<span class="hljs-string">"d"</span>).longOpt(<span class="hljs-string">"disconnect"</span>)</span><br><span class="line">                        .hasArg()</span><br><span class="line">                        .optionalArg(<span class="hljs-keyword">true</span>)</span><br><span class="line">                        .argName(<span class="hljs-string">"link"</span>)</span><br><span class="line">                        .desc(<span class="hljs-string">"disconnect current link, or specified link"</span>)</span><br><span class="line">                        .build());</span><br><span class="line">        mCliOptions.addOption(</span><br><span class="line">                Option.builder(<span class="hljs-string">"f"</span>).longOpt(<span class="hljs-string">"forward"</span>)</span><br><span class="line">                        .numberOfArgs(<span class="hljs-number">1</span>)</span><br><span class="line">                        .argName(<span class="hljs-string">"uid"</span>)</span><br><span class="line">                        .desc(<span class="hljs-string">"send chat to specified contact"</span>)</span><br><span class="line">                        .build());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">addIdentity</span><span class="hljs-params">(String uid, String psw)</span> </span>&#123;</span><br><span class="line">        Xcr3TClient client = <span class="hljs-keyword">new</span> Xcr3TClient(uid, psw, mChatter);</span><br><span class="line">        addIdentity(client);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">addIdentity</span><span class="hljs-params">(Xcr3TClient client)</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">try</span> &#123;</span><br><span class="line">            <span class="hljs-keyword">if</span> (client.login()) &#123;</span><br><span class="line">                mIdentityMap.put(client.getUsername(), client);</span><br><span class="line">                mCurrentIdentity = client;</span><br><span class="line">                mChatter.updateUI();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"Cannot log Identity: "</span> + client</span><br><span class="line">                    .getUsername());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">rmIdentity</span><span class="hljs-params">(Xcr3TClient client)</span> <span class="hljs-keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        mCurrentIdentity = client;</span><br><span class="line">        String identity = mCurrentIdentity.getUsername();</span><br><span class="line">        Map&lt;String, ChatHandler&gt; handlerMap = mChatHandlerMap.get(identity);</span><br><span class="line">        <span class="hljs-keyword">for</span> (ChatHandler handler : handlerMap.values()) &#123;</span><br><span class="line">            handler.disconnect();</span><br><span class="line">        &#125;</span><br><span class="line">        handlerMap.clear();</span><br><span class="line">        mCurrentIdentity.logout();</span><br><span class="line">        mIdentityMap.remove(identity);</span><br><span class="line">        mCurrentIdentity = <span class="hljs-keyword">null</span>;</span><br><span class="line">        mChatter.updateUI();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">addContact</span><span class="hljs-params">(ChatHandler handler)</span> </span>&#123;</span><br><span class="line">        String identity = handler.getSelfUsername();</span><br><span class="line">        String contact = handler.getOppositeUsername();</span><br><span class="line">        getChatHandlerMap(identity).put(contact, handler);</span><br><span class="line">        mCurrentChatHandler = handler;</span><br><span class="line">        mChatter.printLog(<span class="hljs-string">"contact connected:"</span> + handler.getLink());</span><br><span class="line">        mChatter.updateUI();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">rmContact</span><span class="hljs-params">(ChatHandler handler)</span> </span>&#123;</span><br><span class="line">        mCurrentChatHandler = handler;</span><br><span class="line">        String identity = mCurrentChatHandler.getSelfUsername();</span><br><span class="line">        String contact = mCurrentChatHandler.getOppositeUsername();</span><br><span class="line">        getChatHandlerMap(identity).remove(contact);</span><br><span class="line">        mCurrentChatHandler = <span class="hljs-keyword">null</span>;</span><br><span class="line">        mChatter.updateUI();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setCurrentClient</span><span class="hljs-params">(String identity)</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">if</span> (identity != <span class="hljs-keyword">null</span>) &#123;</span><br><span class="line">            <span class="hljs-keyword">if</span> (mCurrentIdentity == <span class="hljs-keyword">null</span> || (!identity.equals</span><br><span class="line">                    (mCurrentIdentity.getUsername()) &amp;&amp; getIdentityMap()</span><br><span class="line">                    .containsKey(identity))) &#123;</span><br><span class="line">                mChatter.printLog(<span class="hljs-string">"switching to Identity: "</span> + identity);</span><br><span class="line">                mCurrentIdentity = mIdentityMap.get(identity);</span><br><span class="line">                mChatter.updateUI();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setCurrentHandler</span><span class="hljs-params">(String link)</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">if</span> (link != <span class="hljs-keyword">null</span>) &#123;</span><br><span class="line">            String identity = link.split(<span class="hljs-string">" -&gt; "</span>)[<span class="hljs-number">0</span>];</span><br><span class="line">            String contact = link.split(<span class="hljs-string">" -&gt; "</span>)[<span class="hljs-number">1</span>];</span><br><span class="line">            <span class="hljs-keyword">if</span> (!link.equals(mCurrentChatHandler.getLink())</span><br><span class="line">                    &amp;&amp; getIdentityMap().containsKey(identity)</span><br><span class="line">                    &amp;&amp; getChatHandlerMap(identity).containsKey(contact)) &#123;</span><br><span class="line">                mChatter.printLog(<span class="hljs-string">"switching to connection: "</span> + link);</span><br><span class="line">                mCurrentChatHandler = mChatHandlerMap.get(identity).get</span><br><span class="line">                        (contact);</span><br><span class="line">                mChatter.updateUI();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="附：快速开发示例-ChatterUI"><a href="#附：快速开发示例-ChatterUI" class="headerlink" title="附：快速开发示例 ChatterUI"></a>附：快速开发示例 ChatterUI</h3><p>ChatterUI 是一个使用 Java API 进行快速开发的示例。它通过创建<code>Xcr3TAdapter</code>对象对多个客户端进行管理，实现<code>Chattable</code>接口以实现信息回显的功能。在文本框内键入命令行进行操作。也可以鼠标点选右方的列表栏进行客户端与会话的管理操作。<img src="xcr3tchat/chatterui.png" alt="ChatterUI截图"></p><h4 id="代码实现-5"><a href="#代码实现-5" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="ChatterUI-java"><a href="#ChatterUI-java" class="headerlink" title="ChatterUI.java"></a>ChatterUI.java</h5><figure class="highlight java hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ChatterUI</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">Chattable</span> </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">private</span> JTextField cmdField;</span><br><span class="line">    <span class="hljs-keyword">private</span> JPanel panel;</span><br><span class="line">    <span class="hljs-keyword">private</span> JButton SENDButton;</span><br><span class="line">    <span class="hljs-keyword">private</span> JTextPane chatPane;</span><br><span class="line">    <span class="hljs-keyword">private</span> JList lsIdentity;</span><br><span class="line">    <span class="hljs-keyword">private</span> JList lsContact;</span><br><span class="line">    <span class="hljs-keyword">private</span> JScrollPane scrollPane;</span><br><span class="line">    <span class="hljs-keyword">private</span> DefaultListModel&lt;String&gt; mListModelIdentity;</span><br><span class="line">    <span class="hljs-keyword">private</span> DefaultListModel&lt;String&gt; mListModelContact;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">private</span> Xcr3TAdapter adapter;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">ChatterUI</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        adapter = <span class="hljs-keyword">new</span> Xcr3TAdapter(<span class="hljs-keyword">this</span>);</span><br><span class="line"></span><br><span class="line">        mListModelIdentity = <span class="hljs-keyword">new</span> DefaultListModel&lt;&gt;();</span><br><span class="line">        mListModelContact = <span class="hljs-keyword">new</span> DefaultListModel&lt;&gt;();</span><br><span class="line">        lsIdentity.setModel(mListModelIdentity);</span><br><span class="line">        lsContact.setModel(mListModelContact);</span><br><span class="line"></span><br><span class="line">        SENDButton.addActionListener(<span class="hljs-keyword">new</span> ActionListener() &#123;</span><br><span class="line">            <span class="hljs-meta">@Override</span></span><br><span class="line">            <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">actionPerformed</span><span class="hljs-params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">                String command = cmdField.getText();</span><br><span class="line">                cmdField.setText(<span class="hljs-string">""</span>);</span><br><span class="line">                adapter.cmd(command.split(<span class="hljs-string">" "</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        lsIdentity.addListSelectionListener(<span class="hljs-keyword">new</span> ListSelectionListener() &#123;</span><br><span class="line">            <span class="hljs-meta">@Override</span></span><br><span class="line">            <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">valueChanged</span><span class="hljs-params">(ListSelectionEvent e)</span> </span>&#123;</span><br><span class="line">                <span class="hljs-keyword">if</span> (!e.getValueIsAdjusting())</span><br><span class="line">                    adapter.setCurrentClient((String) lsIdentity</span><br><span class="line">                            .getSelectedValue());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        lsContact.addListSelectionListener(<span class="hljs-keyword">new</span> ListSelectionListener() &#123;</span><br><span class="line">            <span class="hljs-meta">@Override</span></span><br><span class="line">            <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">valueChanged</span><span class="hljs-params">(ListSelectionEvent e)</span> </span>&#123;</span><br><span class="line">                <span class="hljs-keyword">if</span> (!e.getValueIsAdjusting()) &#123;</span><br><span class="line">                    adapter.setCurrentHandler((String) lsContact</span><br><span class="line">                            .getSelectedValue());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        cmdField.addKeyListener(<span class="hljs-keyword">new</span> KeyAdapter() &#123;</span><br><span class="line">            <span class="hljs-meta">@Override</span></span><br><span class="line">            <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">keyPressed</span><span class="hljs-params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line">                <span class="hljs-keyword">super</span>.keyPressed(e);</span><br><span class="line">                <span class="hljs-keyword">if</span> (e.getKeyCode() == KeyEvent.VK_ENTER)</span><br><span class="line">                    SENDButton.doClick();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> IllegalStateException </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">try</span> &#123;</span><br><span class="line">            UIManager.setLookAndFeel(<span class="hljs-string">"com.sun.java.swing.plaf.nimbus"</span> +</span><br><span class="line">                    <span class="hljs-string">".NimbusLookAndFeel"</span>);</span><br><span class="line">        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        JFrame frame = <span class="hljs-keyword">new</span> JFrame(<span class="hljs-string">"ChatterUI"</span>);</span><br><span class="line">        frame.setContentPane(<span class="hljs-keyword">new</span> ChatterUI().panel);</span><br><span class="line">        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">        frame.pack();</span><br><span class="line">        frame.setVisible(<span class="hljs-keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-meta">@Override</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">incoming</span><span class="hljs-params">(ChatHandler handler)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        adapter.addContact(handler);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-meta">@Override</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">disconnecting</span><span class="hljs-params">(ChatHandler handler)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        adapter.rmContact(handler);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-meta">@Override</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">showChat</span><span class="hljs-params">(String chat)</span> </span>&#123;</span><br><span class="line">        Document doc = chatPane.getDocument();</span><br><span class="line">        <span class="hljs-keyword">try</span> &#123;</span><br><span class="line">            doc.insertString(doc.getLength(), chat + <span class="hljs-string">"\r\n"</span>, <span class="hljs-keyword">new</span></span><br><span class="line">                    SimpleAttributeSet());</span><br><span class="line">            chatPane.setCaretPosition(doc.getLength());</span><br><span class="line">        &#125; <span class="hljs-keyword">catch</span> (BadLocationException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-meta">@Override</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">printLog</span><span class="hljs-params">(String message)</span> </span>&#123;</span><br><span class="line">        Document doc = chatPane.getDocument();</span><br><span class="line">        <span class="hljs-keyword">try</span> &#123;</span><br><span class="line">            doc.insertString(doc.getLength(), <span class="hljs-string">"System:"</span> + message + <span class="hljs-string">"\r\n"</span>,</span><br><span class="line">                    <span class="hljs-keyword">new</span> SimpleAttributeSet());</span><br><span class="line">            chatPane.setCaretPosition(doc.getLength());</span><br><span class="line">        &#125; <span class="hljs-keyword">catch</span> (BadLocationException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-meta">@Override</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">updateUI</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        mListModelIdentity.clear();</span><br><span class="line">        mListModelContact.clear();</span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">for</span> (String identity : adapter.getIdentityMap().keySet()) &#123;</span><br><span class="line">            mListModelIdentity.addElement(identity);</span><br><span class="line">            <span class="hljs-keyword">for</span> (ChatHandler handler : adapter.getChatHandlerMap(identity)</span><br><span class="line">                    .values()) &#123;</span><br><span class="line">                mListModelContact.addElement(handler.getLink());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">if</span> (adapter.getCurrentIdentity() != <span class="hljs-keyword">null</span>)</span><br><span class="line">            lsIdentity.setSelectedValue(adapter.getCurrentIdentity()</span><br><span class="line">                    .getUsername(), <span class="hljs-keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">if</span> (adapter.getCurrentChatHandler() != <span class="hljs-keyword">null</span>)</span><br><span class="line">            lsContact.setSelectedValue(adapter.getCurrentChatHandler()</span><br><span class="line">                    .getLink(), <span class="hljs-keyword">true</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="项目总结"><a href="#项目总结" class="headerlink" title="项目总结"></a>项目总结</h2><p>本次实验工程量巨大，从一开始的功能制定就画了张大饼，接下来的工作就是竭尽全力去填满这张大饼。对于每个功能的流程构思，我使用了软件工程里面的开发方式，先画出各项功能的流程图，不得不说这种方式在开发一套复杂系统时能够保持思路的清晰，不至于一不小心迷失在细节的深渊当中。在构思和实现这套加密算法时，我对RSA、MD5操作、字符串转BASE64操作有了更深刻的认识。而写的这个加密类是我非常满意的一个地方。这个加密类使得复杂的加密解密过程被包装在了简单的两个方法pack()和unpack()中，使得编程效率大大的提高，这也是全局RSA加密得以实现的基础。对于跨平台开发，虽然这次项目提交的时候并没有实现一个跨平台的客户端，但是为此制定的一套RESTful API也是本次项目的一个亮点。因为通过这套API确实看到了跨平台开发的曙光。虽然这个作业提交了，但是这个项目还远远没有结束。我从中看到了一个非常大的可能性，所以并不会放弃该项目，会将持续对其进行开发。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近准备换机器，在整理硬盘的时候翻出来了一套加密聊天系统的源代码，是大三的时候的大作业。这套系统使用一次性密钥对来进行端对端的聊天加密，希望能给大家在加密传输方面带来一些新的思路。完整代码在这里：&lt;a href=&quot;https://github.com/KavelCortex/Xcr3TChat-server&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/KavelCortex/Xcr3TChat-server&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="programming" scheme="http://kavel.cn/categories/programming/"/>
    
    
      <category term="java" scheme="http://kavel.cn/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>URLConnection自动登录深大CAS认证平台：提交表单实现方案</title>
    <link href="http://kavel.cn/zh-CN/post-via-cas.html"/>
    <id>http://kavel.cn/zh-CN/post-via-cas.html</id>
    <published>2017-04-15T05:00:00.000Z</published>
    <updated>2019-09-16T01:31:43.421Z</updated>
    
    <content type="html"><![CDATA[<p>本次实验使用HttpsURLConnection实现深大统一身份认证平台的自动登录。使用这个工具可以对包括Blackboard、OA、图书馆、财务查询、缴纳学费、公文通、校务信箱、故障报修、研究生选课和场馆订票等<strong>一切需要使用深大统一认证平台的站点</strong>实现<strong>一键登录</strong>甚至<strong>免登录</strong>的功能。<br><a id="more"></a></p><h2 id="CAS验证基本原理"><a href="#CAS验证基本原理" class="headerlink" title="CAS验证基本原理"></a>CAS验证基本原理</h2><p>深大统一身份认证平台使用了<code>Jasig Central Authentication Service 3.5.2.1</code>这个 CAS 平台。CAS，全称 Central Authentication Service，是一种比较不错的的单点登录服务框架。使用像 CAS 这样单点登录（Single Sign On, 简称 SSO）方案时，用户只需要登录一次即可访问所有相互信任的系统（比如深大内的各种站点）。</p><p>CAS的基本验证原理如图所示：<br><img src="https://www.ibm.com/developerworks/cn/opensource/os-cn-cas/images/image001.jpg" alt="CAS Protocol"></p><p>通过原理图可知，浏览器访问一个使用了 CAS 服务的页面（CAS Client，如BlackBoard）后，将会被重定向至 CAS 验证页面（CAS Server，如深大的统一身份认证平台）进行用户认证。当用户验证成功后，浏览器将获得一条<strong>唯一且不可伪造的 <code>Ticket</code></strong>。然后 CAS Server 页面将浏览器重定向回 CAS Client 页面，浏览器紧接提交获得的<code>Ticket</code>给 Client页面，Client 页面接收到<code>Ticket</code>后，从后台验证该<code>Ticket</code>的合法性。验证通过后将自动跳转到登录后的页面，并返回相关的身份信息。</p><h2 id="实现结果"><a href="#实现结果" class="headerlink" title="实现结果"></a>实现结果</h2><p>请求 BlackBoard 校园卡用户页面<br><a href="http://elearning.szu.edu.cn/webapps/cbb-sdgxtyM-BBLEARN/checksession.jsp" target="_blank" rel="noopener">http://elearning.szu.edu.cn/webapps/cbb-sdgxtyM-BBLEARN/checksession.jsp</a>，成功打印登录后的 BlackBoard 页面内容：</p><img src="/zh-CN/post-via-cas/result.png" class><h2 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h2><p>实现有两部分代码组成。第一个是主逻辑代码<code>HTTPSPoster.java</code>:</p><figure class="highlight java hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">package</span> cn.kavel.httpsposter;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">import</span> javax.net.ssl.HttpsURLConnection;</span><br><span class="line"><span class="hljs-keyword">import</span> javax.net.ssl.SSLContext;</span><br><span class="line"><span class="hljs-keyword">import</span> javax.net.ssl.SSLSocketFactory;</span><br><span class="line"><span class="hljs-keyword">import</span> javax.net.ssl.TrustManager;</span><br><span class="line"><span class="hljs-keyword">import</span> java.io.*;</span><br><span class="line"><span class="hljs-keyword">import</span> java.net.*;</span><br><span class="line"><span class="hljs-keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="hljs-keyword">import</span> java.util.List;</span><br><span class="line"><span class="hljs-keyword">import</span> java.util.Map;</span><br><span class="line"><span class="hljs-keyword">import</span> java.util.regex.Matcher;</span><br><span class="line"><span class="hljs-keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">/**</span></span><br><span class="line"><span class="hljs-comment"> * Created by wjw_w on 2017/4/13.</span></span><br><span class="line"><span class="hljs-comment"> */</span></span><br><span class="line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">HTTPSPoster</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">private</span> URL mHttpsURLHost;</span><br><span class="line">    <span class="hljs-keyword">private</span> StringBuilder mPOSTQuery;</span><br><span class="line">    <span class="hljs-keyword">private</span> StringBuilder mCOOKIEChain;</span><br><span class="line">    <span class="hljs-keyword">private</span> String action;</span><br><span class="line">    <span class="hljs-keyword">private</span> String cookie;</span><br><span class="line">    <span class="hljs-keyword">private</span> String username;</span><br><span class="line">    <span class="hljs-keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment">/**</span></span><br><span class="line"><span class="hljs-comment">     * 构造方法</span></span><br><span class="line"><span class="hljs-comment">     *</span></span><br><span class="line"><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> host     需要登录的目标地址</span></span><br><span class="line"><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> username 登录用户名</span></span><br><span class="line"><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> password 登录密码</span></span><br><span class="line"><span class="hljs-comment">     */</span></span><br><span class="line">    HTTPSPoster(String host, String username, String password) &#123;</span><br><span class="line">        <span class="hljs-keyword">try</span> &#123;</span><br><span class="line">            <span class="hljs-keyword">this</span>.username = username;</span><br><span class="line">            <span class="hljs-keyword">this</span>.password = password;</span><br><span class="line">            mHttpsURLHost = <span class="hljs-keyword">new</span> URL(host);</span><br><span class="line">            mPOSTQuery = <span class="hljs-keyword">new</span> StringBuilder();</span><br><span class="line">            mCOOKIEChain = <span class="hljs-keyword">new</span> StringBuilder();</span><br><span class="line">        &#125; <span class="hljs-keyword">catch</span> (MalformedURLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment">/**</span></span><br><span class="line"><span class="hljs-comment">     * 添加POST请求键值对</span></span><br><span class="line"><span class="hljs-comment">     *</span></span><br><span class="line"><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> key   POST键</span></span><br><span class="line"><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> value POST值</span></span><br><span class="line"><span class="hljs-comment">     */</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">addPOSTQuery</span><span class="hljs-params">(String key, String value)</span> </span>&#123;</span><br><span class="line">        mPOSTQuery.append(<span class="hljs-string">"&amp;"</span>);</span><br><span class="line">        <span class="hljs-keyword">try</span> &#123;</span><br><span class="line">            mPOSTQuery.append(URLEncoder.encode(key, <span class="hljs-string">"UTF-8"</span>));</span><br><span class="line">            mPOSTQuery.append(<span class="hljs-string">"="</span>);</span><br><span class="line">            mPOSTQuery.append(URLEncoder.encode(value, <span class="hljs-string">"UTF-8"</span>));</span><br><span class="line">        &#125; <span class="hljs-keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment">/**</span></span><br><span class="line"><span class="hljs-comment">     * 为302跳转请求添加Cookie链条</span></span><br><span class="line"><span class="hljs-comment">     *</span></span><br><span class="line"><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> cookie 该次跳转返回的响应头文件内的Set-Cookie值</span></span><br><span class="line"><span class="hljs-comment">     */</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">addCookieChain</span><span class="hljs-params">(String cookie)</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">if</span> (mCOOKIEChain.toString().isEmpty())</span><br><span class="line">            mCOOKIEChain.append(cookie);</span><br><span class="line">        <span class="hljs-keyword">else</span></span><br><span class="line">            mCOOKIEChain.append(<span class="hljs-string">";"</span> + cookie);</span><br><span class="line">        System.out.println(mCOOKIEChain.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment">/**</span></span><br><span class="line"><span class="hljs-comment">     * 处理网页并打印最终网页的结果</span></span><br><span class="line"><span class="hljs-comment">     *</span></span><br><span class="line"><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> connection 需要处理的URLConnection</span></span><br><span class="line"><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 返回String类型的网页内容</span></span><br><span class="line"><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> IOException 连接出错时抛出该异常</span></span><br><span class="line"><span class="hljs-comment">     */</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">private</span> String <span class="hljs-title">getHTML</span><span class="hljs-params">(URLConnection connection)</span> <span class="hljs-keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">if</span> (connection <span class="hljs-keyword">instanceof</span> HttpsURLConnection) &#123;</span><br><span class="line">            HttpsURLConnection httpsURLConnection = (HttpsURLConnection) connection;</span><br><span class="line">            httpsURLConnection.setSSLSocketFactory(initCustomizedSSLSocketFactory());</span><br><span class="line">        &#125;</span><br><span class="line">        connection = handleRedirect(connection);</span><br><span class="line">        String cookies = connection.getHeaderField(<span class="hljs-string">"Set-Cookie"</span>);</span><br><span class="line">        cookie = cookies;</span><br><span class="line">        BufferedReader br = <span class="hljs-keyword">new</span> BufferedReader(<span class="hljs-keyword">new</span> InputStreamReader(connection.getInputStream(), <span class="hljs-string">"GBK"</span>));</span><br><span class="line">        StringBuilder sb = <span class="hljs-keyword">new</span> StringBuilder();</span><br><span class="line">        String s;</span><br><span class="line">        <span class="hljs-keyword">while</span> ((s = br.readLine()) != <span class="hljs-keyword">null</span>) &#123;</span><br><span class="line">            sb.append(s);</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment">/**</span></span><br><span class="line"><span class="hljs-comment">     * 递归处理跳转请求</span></span><br><span class="line"><span class="hljs-comment">     *</span></span><br><span class="line"><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> connection 当前请求</span></span><br><span class="line"><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 返回最终状态码不为302的请求</span></span><br><span class="line"><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> IOException 连接出错时抛出该异常</span></span><br><span class="line"><span class="hljs-comment">     */</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">private</span> URLConnection <span class="hljs-title">handleRedirect</span><span class="hljs-params">(URLConnection connection)</span> <span class="hljs-keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        System.out.println(<span class="hljs-string">"respond:"</span> + ((HttpURLConnection) connection).getResponseCode());</span><br><span class="line">        <span class="hljs-keyword">for</span> (Map.Entry&lt;String, List&lt;String&gt;&gt; entry : connection.getHeaderFields().entrySet()) &#123;</span><br><span class="line">            System.out.println(<span class="hljs-string">"Key : "</span> + entry.getKey() +</span><br><span class="line">                    <span class="hljs-string">" ,Value : "</span> + entry.getValue());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">if</span> (((HttpURLConnection) connection).getResponseCode() == HttpURLConnection.HTTP_MOVED_TEMP) &#123;</span><br><span class="line">            String cookies = connection.getHeaderField(<span class="hljs-string">"Set-Cookie"</span>);</span><br><span class="line">            String location = connection.getHeaderField(<span class="hljs-string">"Location"</span>);</span><br><span class="line">            connection = <span class="hljs-keyword">new</span> URL(location).openConnection();</span><br><span class="line">            <span class="hljs-keyword">if</span> (connection <span class="hljs-keyword">instanceof</span> HttpsURLConnection) &#123;</span><br><span class="line">                HttpsURLConnection httpsURLConnection = (HttpsURLConnection) connection;</span><br><span class="line">                httpsURLConnection.setSSLSocketFactory(initCustomizedSSLSocketFactory());</span><br><span class="line">            &#125;</span><br><span class="line">            addCookieChain(cookies);</span><br><span class="line">            connection.setRequestProperty(<span class="hljs-string">"Cookie"</span>, mCOOKIEChain.toString());</span><br><span class="line">            connection = handleRedirect(connection);</span><br><span class="line">        &#125;</span><br><span class="line">        mHttpsURLHost = connection.getURL();</span><br><span class="line">        <span class="hljs-keyword">return</span> connection;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment">/**</span></span><br><span class="line"><span class="hljs-comment">     * 分析登录验证页面上的元素，获取到表单提交地址和隐藏元素</span></span><br><span class="line"><span class="hljs-comment">     *</span></span><br><span class="line"><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> HTTP String类型的网页</span></span><br><span class="line"><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 返回表单提交地址</span></span><br><span class="line"><span class="hljs-comment">     */</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">private</span> String <span class="hljs-title">analyseAuthPage</span><span class="hljs-params">(String HTTP)</span> </span>&#123;</span><br><span class="line">        String HIDDEN_REG = <span class="hljs-string">"&lt;input type=\"hidden\" (.*?)/&gt;"</span>;</span><br><span class="line">        String FORM_REG = <span class="hljs-string">"&lt;form (.*?)/&gt;"</span>;</span><br><span class="line"></span><br><span class="line">        List&lt;String&gt; hiddenList = getTag(HTTP, HIDDEN_REG);</span><br><span class="line">        <span class="hljs-keyword">for</span> (String tag : hiddenList) &#123;</span><br><span class="line">            String[] splited = tag.split(<span class="hljs-string">"\""</span>);</span><br><span class="line">            String name = splited[<span class="hljs-number">3</span>];</span><br><span class="line">            String value = splited[<span class="hljs-number">5</span>];</span><br><span class="line">            addPOSTQuery(name, value); <span class="hljs-comment">//添加隐藏键值对到mPOSTQuery中</span></span><br><span class="line">        &#125;</span><br><span class="line">        String formtag = getTag(HTTP, FORM_REG).get(<span class="hljs-number">0</span>);</span><br><span class="line">        String[] splited = formtag.split(<span class="hljs-string">"\""</span>);</span><br><span class="line">        <span class="hljs-keyword">return</span> <span class="hljs-string">"https://"</span> + mHttpsURLHost.getHost() + splited[<span class="hljs-number">3</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment">/**</span></span><br><span class="line"><span class="hljs-comment">     * 根据正则表达式匹配内容</span></span><br><span class="line"><span class="hljs-comment">     *</span></span><br><span class="line"><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> HTML  待匹配文本内容</span></span><br><span class="line"><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> regex 正则表达式</span></span><br><span class="line"><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 返回存放有匹配内容的列表</span></span><br><span class="line"><span class="hljs-comment">     */</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">private</span> List&lt;String&gt; <span class="hljs-title">getTag</span><span class="hljs-params">(String HTML, String regex)</span> </span>&#123;</span><br><span class="line">        Matcher matcher = Pattern.compile(regex).matcher(HTML);</span><br><span class="line">        List&lt;String&gt; list = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="hljs-keyword">while</span> (matcher.find()) &#123;</span><br><span class="line">            list.add(matcher.group());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment">/**</span></span><br><span class="line"><span class="hljs-comment">     * 主要逻辑</span></span><br><span class="line"><span class="hljs-comment">     *</span></span><br><span class="line"><span class="hljs-comment">     * STEP1: 裸GET传入的网页，会因为没有身份验证信息“ticket”而被跳转到CAS页面进行身份验证。</span></span><br><span class="line"><span class="hljs-comment">     * 跳转到实际的CAS页面后，分析页面中的HTML元素，从而获取到提交表单所需要的必要信息。（包括POST地址和hidden属性的值）</span></span><br><span class="line"><span class="hljs-comment">     * 还有从响应头中获取表示当前身份的Cookie（Cookie非常重要，前几个小时因为没有正确存入Cookie而遭遇了循环跳转CAS页面）</span></span><br><span class="line"><span class="hljs-comment">     *</span></span><br><span class="line"><span class="hljs-comment">     * STEP2: 获取到必要信息后，open一个connection并将必要信息进行组装，最后加入username与password，进行POST操作。</span></span><br><span class="line"><span class="hljs-comment">     * 在这些信息中，组装正确的Cookie值非常重要。前几个小时的实验因为没有存入正确的Cookie而被判断没有登录，一直被重定向回CAS页面。</span></span><br><span class="line"><span class="hljs-comment">     *</span></span><br><span class="line"><span class="hljs-comment">     * STEP3: 如果一切正常，connection将会非常舒服地通过验证并跳转到所希望的页面上去。</span></span><br><span class="line"><span class="hljs-comment">     */</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">post</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">try</span> &#123;</span><br><span class="line">            System.out.println(<span class="hljs-string">"STEP1"</span>);</span><br><span class="line">            <span class="hljs-comment">//STEP1: GET and Analyse CAS Page (in order to get HIDDEN INFORMATION and COOKIE)</span></span><br><span class="line">            String http = getHTML(mHttpsURLHost.openConnection());</span><br><span class="line">            String action = analyseAuthPage(http);</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="hljs-string">"STEP2"</span>);</span><br><span class="line">            <span class="hljs-comment">//STEP2: POST data and HIDDEN INFORMATION and COOKIE</span></span><br><span class="line">            URL newPOST = <span class="hljs-keyword">new</span> URL(action);</span><br><span class="line">            HttpsURLConnection newPOSTConnection = (HttpsURLConnection) newPOST.openConnection();</span><br><span class="line">            newPOSTConnection.setSSLSocketFactory(initCustomizedSSLSocketFactory());</span><br><span class="line">            newPOSTConnection.setDoOutput(<span class="hljs-keyword">true</span>);</span><br><span class="line">            newPOSTConnection.setRequestMethod(<span class="hljs-string">"POST"</span>);</span><br><span class="line">            newPOSTConnection.setRequestProperty(<span class="hljs-string">"Cookie"</span>, cookie);</span><br><span class="line">            addPOSTQuery(<span class="hljs-string">"username"</span>, username);</span><br><span class="line">            addPOSTQuery(<span class="hljs-string">"password"</span>, password);</span><br><span class="line">            BufferedWriter bufferedWriter = <span class="hljs-keyword">new</span> BufferedWriter(<span class="hljs-keyword">new</span> OutputStreamWriter(newPOSTConnection.getOutputStream()));</span><br><span class="line">            bufferedWriter.write(mPOSTQuery.toString());</span><br><span class="line">            bufferedWriter.flush();</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="hljs-string">"STEP3"</span>);</span><br><span class="line">            <span class="hljs-comment">//STEP3: GET RESULT</span></span><br><span class="line">            getHTML(newPOSTConnection);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment">/**</span></span><br><span class="line"><span class="hljs-comment">     * 组装自定义SSLSocket工厂</span></span><br><span class="line"><span class="hljs-comment">     * 在默认的情况下建立HTTPS链接时，HttpsURLConnection会根据默认的设定先去验证服务器的证书信息。</span></span><br><span class="line"><span class="hljs-comment">     * 而由于一些未知的原因，客户端获取不到深大CAS页面的证书信息，</span></span><br><span class="line"><span class="hljs-comment">     * 于是转向客户端TrustStore中寻找证书。而默认TrustStore是空的，因为没有手工添加过证书。</span></span><br><span class="line"><span class="hljs-comment">     * 所以这种情况下进行连接将会抛出SSLHandshakeException异常。</span></span><br><span class="line"><span class="hljs-comment">     * 所以需要传入一个自定义的SSLSocketFactory用于绕过证书验证。</span></span><br><span class="line"><span class="hljs-comment">     * 这个自定义的SSLSocket被传入一个假TrustManager，这个manager遇到证书验证失败不会有任何警报。当然，这种做法非常危险。</span></span><br><span class="line"><span class="hljs-comment">     *</span></span><br><span class="line"><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 返回自定义的SSLSocketFactory</span></span><br><span class="line"><span class="hljs-comment">     */</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">private</span> SSLSocketFactory <span class="hljs-title">initCustomizedSSLSocketFactory</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">try</span> &#123;</span><br><span class="line">            TrustManager[] trustManagers = &#123;<span class="hljs-keyword">new</span> MyX509TrustManager()&#125;;</span><br><span class="line">            SSLContext sslContext = SSLContext.getInstance(<span class="hljs-string">"SSL"</span>, <span class="hljs-string">"SunJSSE"</span>);</span><br><span class="line">            sslContext.init(<span class="hljs-keyword">null</span>, trustManagers, <span class="hljs-keyword">new</span> java.security.SecureRandom());</span><br><span class="line">            <span class="hljs-keyword">return</span> sslContext.getSocketFactory();</span><br><span class="line">        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="hljs-comment">// write your code here</span></span><br><span class="line">        String bb = <span class="hljs-string">"http://elearning.szu.edu.cn/webapps/cbb-sdgxtyM-BBLEARN/checksession.jsp"</span>;</span><br><span class="line">        String username = <span class="hljs-string">""</span>;</span><br><span class="line">        String password = <span class="hljs-string">""</span>;</span><br><span class="line">        HTTPSPoster poster = <span class="hljs-keyword">new</span> HTTPSPoster(bb, username, password);</span><br><span class="line">        poster.post();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二个是用于绕过证书验证的自定义TrustMamager<code>MyX509TrustManager.java</code>:</p><figure class="highlight java hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">package</span> cn.kavel.httpsposter;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">import</span> javax.net.ssl.TrustManager;</span><br><span class="line"><span class="hljs-keyword">import</span> javax.net.ssl.TrustManagerFactory;</span><br><span class="line"><span class="hljs-keyword">import</span> javax.net.ssl.X509TrustManager;</span><br><span class="line"><span class="hljs-keyword">import</span> java.security.KeyStore;</span><br><span class="line"><span class="hljs-keyword">import</span> java.security.cert.CertificateException;</span><br><span class="line"><span class="hljs-keyword">import</span> java.security.cert.X509Certificate;</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">/**</span></span><br><span class="line"><span class="hljs-comment"> * Created by wjw_w on 2017/4/13.</span></span><br><span class="line"><span class="hljs-comment"> */</span></span><br><span class="line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyX509TrustManager</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">X509TrustManager</span> </span>&#123;</span><br><span class="line">    <span class="hljs-comment">/*</span></span><br><span class="line"><span class="hljs-comment">     * The default X509TrustManager returned by SunX509.  We'll delegate</span></span><br><span class="line"><span class="hljs-comment">     * decisions to it, and fall back to the logic in this class if the</span></span><br><span class="line"><span class="hljs-comment">     * default X509TrustManager doesn't trust it.</span></span><br><span class="line"><span class="hljs-comment">     */</span></span><br><span class="line">    X509TrustManager sunJSSEX509TrustManager;</span><br><span class="line"></span><br><span class="line">    MyX509TrustManager() <span class="hljs-keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="hljs-comment">// create a "default" JSSE X509TrustManager.</span></span><br><span class="line">        KeyStore ks = KeyStore.getInstance(<span class="hljs-string">"JKS"</span>);</span><br><span class="line">        <span class="hljs-comment">//不需要load，因为这个是假的，是特技</span></span><br><span class="line">        <span class="hljs-comment">//ks.load(new FileInputStream("trustedCerts"),</span></span><br><span class="line">        <span class="hljs-comment">//        "passphrase".toCharArray());</span></span><br><span class="line">        TrustManagerFactory tmf =</span><br><span class="line">                TrustManagerFactory.getInstance(<span class="hljs-string">"SunX509"</span>, <span class="hljs-string">"SunJSSE"</span>);</span><br><span class="line">        tmf.init(ks);</span><br><span class="line">        TrustManager tms[] = tmf.getTrustManagers();</span><br><span class="line">            <span class="hljs-comment">/*</span></span><br><span class="line"><span class="hljs-comment">             * Iterate over the returned trustmanagers, look</span></span><br><span class="line"><span class="hljs-comment">             * for an instance of X509TrustManager.  If found,</span></span><br><span class="line"><span class="hljs-comment">             * use that as our "default" trust manager.</span></span><br><span class="line"><span class="hljs-comment">             */</span></span><br><span class="line">        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; tms.length; i++) &#123;</span><br><span class="line">            <span class="hljs-keyword">if</span> (tms[i] <span class="hljs-keyword">instanceof</span> X509TrustManager) &#123;</span><br><span class="line">                sunJSSEX509TrustManager = (X509TrustManager) tms[i];</span><br><span class="line">                <span class="hljs-keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="hljs-comment">/*</span></span><br><span class="line"><span class="hljs-comment">             * Find some other way to initialize, or else we have to fail the</span></span><br><span class="line"><span class="hljs-comment">             * constructor.</span></span><br><span class="line"><span class="hljs-comment">             */</span></span><br><span class="line">        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> Exception(<span class="hljs-string">"Couldn't initialize"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment">/*</span></span><br><span class="line"><span class="hljs-comment">     * Delegate to the default trust manager.</span></span><br><span class="line"><span class="hljs-comment">     */</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">checkClientTrusted</span><span class="hljs-params">(X509Certificate[] chain, String authType)</span></span></span><br><span class="line"><span class="hljs-function">            <span class="hljs-keyword">throws</span> CertificateException </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">try</span> &#123;</span><br><span class="line">            sunJSSEX509TrustManager.checkClientTrusted(chain, authType);</span><br><span class="line">        &#125; <span class="hljs-keyword">catch</span> (CertificateException excep) &#123;</span><br><span class="line">            <span class="hljs-comment">// do any special handling here, or rethrow exception.</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment">/*</span></span><br><span class="line"><span class="hljs-comment">     * Delegate to the default trust manager.</span></span><br><span class="line"><span class="hljs-comment">     */</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">checkServerTrusted</span><span class="hljs-params">(X509Certificate[] chain, String authType)</span></span></span><br><span class="line"><span class="hljs-function">            <span class="hljs-keyword">throws</span> CertificateException </span>&#123;</span><br><span class="line">        <span class="hljs-keyword">try</span> &#123;</span><br><span class="line">            sunJSSEX509TrustManager.checkServerTrusted(chain, authType);</span><br><span class="line">        &#125; <span class="hljs-keyword">catch</span> (CertificateException excep) &#123;</span><br><span class="line">                <span class="hljs-comment">/*</span></span><br><span class="line"><span class="hljs-comment">                 * Possibly pop up a dialog box asking whether to trust the</span></span><br><span class="line"><span class="hljs-comment">                 * cert chain.</span></span><br><span class="line"><span class="hljs-comment">                 */</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment">/*</span></span><br><span class="line"><span class="hljs-comment">     * Merely pass this through.</span></span><br><span class="line"><span class="hljs-comment">     */</span></span><br><span class="line">    <span class="hljs-keyword">public</span> X509Certificate[] getAcceptedIssuers() &#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> sunJSSEX509TrustManager.getAcceptedIssuers();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本次实验使用HttpsURLConnection实现深大统一身份认证平台的自动登录。使用这个工具可以对包括Blackboard、OA、图书馆、财务查询、缴纳学费、公文通、校务信箱、故障报修、研究生选课和场馆订票等&lt;strong&gt;一切需要使用深大统一认证平台的站点&lt;/strong&gt;实现&lt;strong&gt;一键登录&lt;/strong&gt;甚至&lt;strong&gt;免登录&lt;/strong&gt;的功能。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="programming" scheme="http://kavel.cn/categories/programming/"/>
    
    
      <category term="java" scheme="http://kavel.cn/tags/java/"/>
    
  </entry>
  
</feed>
